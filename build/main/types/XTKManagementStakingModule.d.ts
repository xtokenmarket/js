/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from 'ethers'
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from '@ethersproject/contracts'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'

interface XTKManagementStakingModuleInterface extends ethers.utils.Interface {
  functions: {
    'allowance(address,address)': FunctionFragment
    'approve(address,uint256)': FunctionFragment
    'balanceOf(address)': FunctionFragment
    'calculateProRataXtk(uint256)': FunctionFragment
    'calculateXtkToDistributeOnUnstake(uint256)': FunctionFragment
    'calculateXxtkAmountToMint(uint256)': FunctionFragment
    'decimals()': FunctionFragment
    'decreaseAllowance(address,uint256)': FunctionFragment
    'increaseAllowance(address,uint256)': FunctionFragment
    'initialize()': FunctionFragment
    'name()': FunctionFragment
    'owner()': FunctionFragment
    'renounceOwnership()': FunctionFragment
    'setTransferable(bool)': FunctionFragment
    'setUnstakePenalty(uint256)': FunctionFragment
    'stake(uint256)': FunctionFragment
    'symbol()': FunctionFragment
    'totalSupply()': FunctionFragment
    'transfer(address,uint256)': FunctionFragment
    'transferFrom(address,address,uint256)': FunctionFragment
    'transferOwnership(address)': FunctionFragment
    'transferable()': FunctionFragment
    'unstake(uint256)': FunctionFragment
    'unstakePenalty()': FunctionFragment
    'xtk()': FunctionFragment
  }

  encodeFunctionData(
    functionFragment: 'allowance',
    values: [string, string]
  ): string
  encodeFunctionData(
    functionFragment: 'approve',
    values: [string, BigNumberish]
  ): string
  encodeFunctionData(functionFragment: 'balanceOf', values: [string]): string
  encodeFunctionData(
    functionFragment: 'calculateProRataXtk',
    values: [BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'calculateXtkToDistributeOnUnstake',
    values: [BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'calculateXxtkAmountToMint',
    values: [BigNumberish]
  ): string
  encodeFunctionData(functionFragment: 'decimals', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'decreaseAllowance',
    values: [string, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'increaseAllowance',
    values: [string, BigNumberish]
  ): string
  encodeFunctionData(functionFragment: 'initialize', values?: undefined): string
  encodeFunctionData(functionFragment: 'name', values?: undefined): string
  encodeFunctionData(functionFragment: 'owner', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'renounceOwnership',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'setTransferable',
    values: [boolean]
  ): string
  encodeFunctionData(
    functionFragment: 'setUnstakePenalty',
    values: [BigNumberish]
  ): string
  encodeFunctionData(functionFragment: 'stake', values: [BigNumberish]): string
  encodeFunctionData(functionFragment: 'symbol', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'totalSupply',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'transfer',
    values: [string, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'transferFrom',
    values: [string, string, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'transferOwnership',
    values: [string]
  ): string
  encodeFunctionData(
    functionFragment: 'transferable',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'unstake',
    values: [BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'unstakePenalty',
    values?: undefined
  ): string
  encodeFunctionData(functionFragment: 'xtk', values?: undefined): string

  decodeFunctionResult(functionFragment: 'allowance', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'approve', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'balanceOf', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'calculateProRataXtk',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'calculateXtkToDistributeOnUnstake',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'calculateXxtkAmountToMint',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'decimals', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'decreaseAllowance',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'increaseAllowance',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'initialize', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'name', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'renounceOwnership',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'setTransferable',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'setUnstakePenalty',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'stake', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'symbol', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'totalSupply', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'transfer', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'transferFrom',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'transferOwnership',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'transferable',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'unstake', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'unstakePenalty',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'xtk', data: BytesLike): Result

  events: {
    'Approval(address,address,uint256)': EventFragment
    'OwnershipTransferred(address,address)': EventFragment
    'SetUnstakePenalty(uint256,uint256)': EventFragment
    'Stake(address,uint256,uint256)': EventFragment
    'Transfer(address,address,uint256)': EventFragment
    'UnStake(address,uint256,uint256)': EventFragment
  }

  getEvent(nameOrSignatureOrTopic: 'Approval'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'SetUnstakePenalty'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'Stake'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'Transfer'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'UnStake'): EventFragment
}

export class XTKManagementStakingModule extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  on(event: EventFilter | string, listener: Listener): this
  once(event: EventFilter | string, listener: Listener): this
  addListener(eventName: EventFilter | string, listener: Listener): this
  removeAllListeners(eventName: EventFilter | string): this
  removeListener(eventName: any, listener: Listener): this

  interface: XTKManagementStakingModuleInterface

  functions: {
    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'allowance(address,address)'(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    approve(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'approve(address,uint256)'(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    balanceOf(account: string, overrides?: CallOverrides): Promise<[BigNumber]>

    'balanceOf(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    calculateProRataXtk(
      xxtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'calculateProRataXtk(uint256)'(
      xxtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    calculateXtkToDistributeOnUnstake(
      proRataXtk: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'calculateXtkToDistributeOnUnstake(uint256)'(
      proRataXtk: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    calculateXxtkAmountToMint(
      xtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'calculateXxtkAmountToMint(uint256)'(
      xtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    decimals(overrides?: CallOverrides): Promise<[number]>

    'decimals()'(overrides?: CallOverrides): Promise<[number]>

    decreaseAllowance(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'decreaseAllowance(address,uint256)'(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    increaseAllowance(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'increaseAllowance(address,uint256)'(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    initialize(overrides?: Overrides): Promise<ContractTransaction>

    'initialize()'(overrides?: Overrides): Promise<ContractTransaction>

    name(overrides?: CallOverrides): Promise<[string]>

    'name()'(overrides?: CallOverrides): Promise<[string]>

    owner(overrides?: CallOverrides): Promise<[string]>

    'owner()'(overrides?: CallOverrides): Promise<[string]>

    renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>

    'renounceOwnership()'(overrides?: Overrides): Promise<ContractTransaction>

    setTransferable(
      _transferable: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'setTransferable(bool)'(
      _transferable: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    setUnstakePenalty(
      _unstakePenalty: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'setUnstakePenalty(uint256)'(
      _unstakePenalty: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    stake(
      _xtkAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'stake(uint256)'(
      _xtkAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    symbol(overrides?: CallOverrides): Promise<[string]>

    'symbol()'(overrides?: CallOverrides): Promise<[string]>

    totalSupply(overrides?: CallOverrides): Promise<[BigNumber]>

    'totalSupply()'(overrides?: CallOverrides): Promise<[BigNumber]>

    transfer(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'transfer(address,uint256)'(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    transferFrom(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'transferFrom(address,address,uint256)'(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    transferable(overrides?: CallOverrides): Promise<[boolean]>

    'transferable()'(overrides?: CallOverrides): Promise<[boolean]>

    unstake(
      _xxtkAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'unstake(uint256)'(
      _xxtkAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    unstakePenalty(overrides?: CallOverrides): Promise<[BigNumber]>

    'unstakePenalty()'(overrides?: CallOverrides): Promise<[BigNumber]>

    xtk(overrides?: CallOverrides): Promise<[string]>

    'xtk()'(overrides?: CallOverrides): Promise<[string]>
  }

  allowance(
    owner: string,
    spender: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'allowance(address,address)'(
    owner: string,
    spender: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  approve(
    spender: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'approve(address,uint256)'(
    spender: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>

  'balanceOf(address)'(
    account: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  calculateProRataXtk(
    xxtkAmount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'calculateProRataXtk(uint256)'(
    xxtkAmount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  calculateXtkToDistributeOnUnstake(
    proRataXtk: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'calculateXtkToDistributeOnUnstake(uint256)'(
    proRataXtk: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  calculateXxtkAmountToMint(
    xtkAmount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'calculateXxtkAmountToMint(uint256)'(
    xtkAmount: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  decimals(overrides?: CallOverrides): Promise<number>

  'decimals()'(overrides?: CallOverrides): Promise<number>

  decreaseAllowance(
    spender: string,
    subtractedValue: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'decreaseAllowance(address,uint256)'(
    spender: string,
    subtractedValue: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  increaseAllowance(
    spender: string,
    addedValue: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'increaseAllowance(address,uint256)'(
    spender: string,
    addedValue: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  initialize(overrides?: Overrides): Promise<ContractTransaction>

  'initialize()'(overrides?: Overrides): Promise<ContractTransaction>

  name(overrides?: CallOverrides): Promise<string>

  'name()'(overrides?: CallOverrides): Promise<string>

  owner(overrides?: CallOverrides): Promise<string>

  'owner()'(overrides?: CallOverrides): Promise<string>

  renounceOwnership(overrides?: Overrides): Promise<ContractTransaction>

  'renounceOwnership()'(overrides?: Overrides): Promise<ContractTransaction>

  setTransferable(
    _transferable: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'setTransferable(bool)'(
    _transferable: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  setUnstakePenalty(
    _unstakePenalty: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'setUnstakePenalty(uint256)'(
    _unstakePenalty: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  stake(
    _xtkAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'stake(uint256)'(
    _xtkAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  symbol(overrides?: CallOverrides): Promise<string>

  'symbol()'(overrides?: CallOverrides): Promise<string>

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>

  'totalSupply()'(overrides?: CallOverrides): Promise<BigNumber>

  transfer(
    recipient: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'transfer(address,uint256)'(
    recipient: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  transferFrom(
    sender: string,
    recipient: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'transferFrom(address,address,uint256)'(
    sender: string,
    recipient: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  transferOwnership(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'transferOwnership(address)'(
    newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  transferable(overrides?: CallOverrides): Promise<boolean>

  'transferable()'(overrides?: CallOverrides): Promise<boolean>

  unstake(
    _xxtkAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'unstake(uint256)'(
    _xxtkAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  unstakePenalty(overrides?: CallOverrides): Promise<BigNumber>

  'unstakePenalty()'(overrides?: CallOverrides): Promise<BigNumber>

  xtk(overrides?: CallOverrides): Promise<string>

  'xtk()'(overrides?: CallOverrides): Promise<string>

  callStatic: {
    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'allowance(address,address)'(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    approve(
      spender: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    'approve(address,uint256)'(
      spender: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>

    'balanceOf(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    calculateProRataXtk(
      xxtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'calculateProRataXtk(uint256)'(
      xxtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    calculateXtkToDistributeOnUnstake(
      proRataXtk: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'calculateXtkToDistributeOnUnstake(uint256)'(
      proRataXtk: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    calculateXxtkAmountToMint(
      xtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'calculateXxtkAmountToMint(uint256)'(
      xtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    decimals(overrides?: CallOverrides): Promise<number>

    'decimals()'(overrides?: CallOverrides): Promise<number>

    decreaseAllowance(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    'decreaseAllowance(address,uint256)'(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    increaseAllowance(
      spender: string,
      addedValue: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    'increaseAllowance(address,uint256)'(
      spender: string,
      addedValue: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    initialize(overrides?: CallOverrides): Promise<void>

    'initialize()'(overrides?: CallOverrides): Promise<void>

    name(overrides?: CallOverrides): Promise<string>

    'name()'(overrides?: CallOverrides): Promise<string>

    owner(overrides?: CallOverrides): Promise<string>

    'owner()'(overrides?: CallOverrides): Promise<string>

    renounceOwnership(overrides?: CallOverrides): Promise<void>

    'renounceOwnership()'(overrides?: CallOverrides): Promise<void>

    setTransferable(
      _transferable: boolean,
      overrides?: CallOverrides
    ): Promise<void>

    'setTransferable(bool)'(
      _transferable: boolean,
      overrides?: CallOverrides
    ): Promise<void>

    setUnstakePenalty(
      _unstakePenalty: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    'setUnstakePenalty(uint256)'(
      _unstakePenalty: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    stake(_xtkAmount: BigNumberish, overrides?: CallOverrides): Promise<void>

    'stake(uint256)'(
      _xtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    symbol(overrides?: CallOverrides): Promise<string>

    'symbol()'(overrides?: CallOverrides): Promise<string>

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>

    'totalSupply()'(overrides?: CallOverrides): Promise<BigNumber>

    transfer(
      recipient: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    'transfer(address,uint256)'(
      recipient: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    transferFrom(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    'transferFrom(address,address,uint256)'(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>

    transferable(overrides?: CallOverrides): Promise<boolean>

    'transferable()'(overrides?: CallOverrides): Promise<boolean>

    unstake(_xxtkAmount: BigNumberish, overrides?: CallOverrides): Promise<void>

    'unstake(uint256)'(
      _xxtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    unstakePenalty(overrides?: CallOverrides): Promise<BigNumber>

    'unstakePenalty()'(overrides?: CallOverrides): Promise<BigNumber>

    xtk(overrides?: CallOverrides): Promise<string>

    'xtk()'(overrides?: CallOverrides): Promise<string>
  }

  filters: {
    Approval(
      owner: string | null,
      spender: string | null,
      value: null
    ): EventFilter

    OwnershipTransferred(
      previousOwner: string | null,
      newOwner: string | null
    ): EventFilter

    SetUnstakePenalty(
      timestamp: BigNumberish | null,
      unstakePenalty: null
    ): EventFilter

    Stake(sender: string | null, xtkAmount: null, xxtkAmount: null): EventFilter

    Transfer(from: string | null, to: string | null, value: null): EventFilter

    UnStake(
      receiver: string | null,
      xxtkAmount: null,
      xtkAmount: null
    ): EventFilter
  }

  estimateGas: {
    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'allowance(address,address)'(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    approve(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'approve(address,uint256)'(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>

    'balanceOf(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    calculateProRataXtk(
      xxtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'calculateProRataXtk(uint256)'(
      xxtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    calculateXtkToDistributeOnUnstake(
      proRataXtk: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'calculateXtkToDistributeOnUnstake(uint256)'(
      proRataXtk: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    calculateXxtkAmountToMint(
      xtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'calculateXxtkAmountToMint(uint256)'(
      xtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    decimals(overrides?: CallOverrides): Promise<BigNumber>

    'decimals()'(overrides?: CallOverrides): Promise<BigNumber>

    decreaseAllowance(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'decreaseAllowance(address,uint256)'(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    increaseAllowance(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'increaseAllowance(address,uint256)'(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    initialize(overrides?: Overrides): Promise<BigNumber>

    'initialize()'(overrides?: Overrides): Promise<BigNumber>

    name(overrides?: CallOverrides): Promise<BigNumber>

    'name()'(overrides?: CallOverrides): Promise<BigNumber>

    owner(overrides?: CallOverrides): Promise<BigNumber>

    'owner()'(overrides?: CallOverrides): Promise<BigNumber>

    renounceOwnership(overrides?: Overrides): Promise<BigNumber>

    'renounceOwnership()'(overrides?: Overrides): Promise<BigNumber>

    setTransferable(
      _transferable: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>

    'setTransferable(bool)'(
      _transferable: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>

    setUnstakePenalty(
      _unstakePenalty: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'setUnstakePenalty(uint256)'(
      _unstakePenalty: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    stake(_xtkAmount: BigNumberish, overrides?: Overrides): Promise<BigNumber>

    'stake(uint256)'(
      _xtkAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    symbol(overrides?: CallOverrides): Promise<BigNumber>

    'symbol()'(overrides?: CallOverrides): Promise<BigNumber>

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>

    'totalSupply()'(overrides?: CallOverrides): Promise<BigNumber>

    transfer(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'transfer(address,uint256)'(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    transferFrom(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'transferFrom(address,address,uint256)'(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    transferable(overrides?: CallOverrides): Promise<BigNumber>

    'transferable()'(overrides?: CallOverrides): Promise<BigNumber>

    unstake(
      _xxtkAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'unstake(uint256)'(
      _xxtkAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    unstakePenalty(overrides?: CallOverrides): Promise<BigNumber>

    'unstakePenalty()'(overrides?: CallOverrides): Promise<BigNumber>

    xtk(overrides?: CallOverrides): Promise<BigNumber>

    'xtk()'(overrides?: CallOverrides): Promise<BigNumber>
  }

  populateTransaction: {
    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'allowance(address,address)'(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    approve(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'approve(address,uint256)'(
      spender: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    balanceOf(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'balanceOf(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    calculateProRataXtk(
      xxtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'calculateProRataXtk(uint256)'(
      xxtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    calculateXtkToDistributeOnUnstake(
      proRataXtk: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'calculateXtkToDistributeOnUnstake(uint256)'(
      proRataXtk: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    calculateXxtkAmountToMint(
      xtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'calculateXxtkAmountToMint(uint256)'(
      xtkAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    decimals(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'decimals()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    decreaseAllowance(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'decreaseAllowance(address,uint256)'(
      spender: string,
      subtractedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    increaseAllowance(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'increaseAllowance(address,uint256)'(
      spender: string,
      addedValue: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    initialize(overrides?: Overrides): Promise<PopulatedTransaction>

    'initialize()'(overrides?: Overrides): Promise<PopulatedTransaction>

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'name()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'owner()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    renounceOwnership(overrides?: Overrides): Promise<PopulatedTransaction>

    'renounceOwnership()'(overrides?: Overrides): Promise<PopulatedTransaction>

    setTransferable(
      _transferable: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'setTransferable(bool)'(
      _transferable: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    setUnstakePenalty(
      _unstakePenalty: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'setUnstakePenalty(uint256)'(
      _unstakePenalty: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    stake(
      _xtkAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'stake(uint256)'(
      _xtkAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'symbol()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'totalSupply()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    transfer(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'transfer(address,uint256)'(
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    transferFrom(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'transferFrom(address,address,uint256)'(
      sender: string,
      recipient: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    transferOwnership(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'transferOwnership(address)'(
      newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    transferable(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'transferable()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    unstake(
      _xxtkAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'unstake(uint256)'(
      _xxtkAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    unstakePenalty(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'unstakePenalty()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    xtk(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'xtk()'(overrides?: CallOverrides): Promise<PopulatedTransaction>
  }
}
