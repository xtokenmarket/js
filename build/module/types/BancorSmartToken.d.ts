/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from 'ethers'
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from '@ethersproject/contracts'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'

interface BancorSmartTokenInterface extends ethers.utils.Interface {
  functions: {
    'name()': FunctionFragment
    'approve(address,uint256)': FunctionFragment
    'disableTransfers(bool)': FunctionFragment
    'totalSupply()': FunctionFragment
    'transferFrom(address,address,uint256)': FunctionFragment
    'decimals()': FunctionFragment
    'version()': FunctionFragment
    'withdrawTokens(address,address,uint256)': FunctionFragment
    'balanceOf(address)': FunctionFragment
    'acceptOwnership()': FunctionFragment
    'issue(address,uint256)': FunctionFragment
    'owner()': FunctionFragment
    'symbol()': FunctionFragment
    'destroy(address,uint256)': FunctionFragment
    'transfer(address,uint256)': FunctionFragment
    'transfersEnabled()': FunctionFragment
    'newOwner()': FunctionFragment
    'allowance(address,address)': FunctionFragment
    'transferOwnership(address)': FunctionFragment
  }

  encodeFunctionData(functionFragment: 'name', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'approve',
    values: [string, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'disableTransfers',
    values: [boolean]
  ): string
  encodeFunctionData(
    functionFragment: 'totalSupply',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'transferFrom',
    values: [string, string, BigNumberish]
  ): string
  encodeFunctionData(functionFragment: 'decimals', values?: undefined): string
  encodeFunctionData(functionFragment: 'version', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'withdrawTokens',
    values: [string, string, BigNumberish]
  ): string
  encodeFunctionData(functionFragment: 'balanceOf', values: [string]): string
  encodeFunctionData(
    functionFragment: 'acceptOwnership',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'issue',
    values: [string, BigNumberish]
  ): string
  encodeFunctionData(functionFragment: 'owner', values?: undefined): string
  encodeFunctionData(functionFragment: 'symbol', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'destroy',
    values: [string, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'transfer',
    values: [string, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'transfersEnabled',
    values?: undefined
  ): string
  encodeFunctionData(functionFragment: 'newOwner', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'allowance',
    values: [string, string]
  ): string
  encodeFunctionData(
    functionFragment: 'transferOwnership',
    values: [string]
  ): string

  decodeFunctionResult(functionFragment: 'name', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'approve', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'disableTransfers',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'totalSupply', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'transferFrom',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'decimals', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'version', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'withdrawTokens',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'balanceOf', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'acceptOwnership',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'issue', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'symbol', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'destroy', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'transfer', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'transfersEnabled',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'newOwner', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'allowance', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'transferOwnership',
    data: BytesLike
  ): Result

  events: {
    'NewSmartToken(address)': EventFragment
    'Issuance(uint256)': EventFragment
    'Destruction(uint256)': EventFragment
    'Transfer(address,address,uint256)': EventFragment
    'Approval(address,address,uint256)': EventFragment
    'OwnerUpdate(address,address)': EventFragment
  }

  getEvent(nameOrSignatureOrTopic: 'NewSmartToken'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'Issuance'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'Destruction'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'Transfer'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'Approval'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'OwnerUpdate'): EventFragment
}

export class BancorSmartToken extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  on(event: EventFilter | string, listener: Listener): this
  once(event: EventFilter | string, listener: Listener): this
  addListener(eventName: EventFilter | string, listener: Listener): this
  removeAllListeners(eventName: EventFilter | string): this
  removeListener(eventName: any, listener: Listener): this

  interface: BancorSmartTokenInterface

  functions: {
    name(overrides?: CallOverrides): Promise<[string]>

    'name()'(overrides?: CallOverrides): Promise<[string]>

    approve(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'approve(address,uint256)'(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    disableTransfers(
      _disable: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'disableTransfers(bool)'(
      _disable: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    totalSupply(overrides?: CallOverrides): Promise<[BigNumber]>

    'totalSupply()'(overrides?: CallOverrides): Promise<[BigNumber]>

    transferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'transferFrom(address,address,uint256)'(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    decimals(overrides?: CallOverrides): Promise<[number]>

    'decimals()'(overrides?: CallOverrides): Promise<[number]>

    version(overrides?: CallOverrides): Promise<[string]>

    'version()'(overrides?: CallOverrides): Promise<[string]>

    withdrawTokens(
      _token: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'withdrawTokens(address,address,uint256)'(
      _token: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    balanceOf(arg0: string, overrides?: CallOverrides): Promise<[BigNumber]>

    'balanceOf(address)'(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    acceptOwnership(overrides?: Overrides): Promise<ContractTransaction>

    'acceptOwnership()'(overrides?: Overrides): Promise<ContractTransaction>

    issue(
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'issue(address,uint256)'(
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    owner(overrides?: CallOverrides): Promise<[string]>

    'owner()'(overrides?: CallOverrides): Promise<[string]>

    symbol(overrides?: CallOverrides): Promise<[string]>

    'symbol()'(overrides?: CallOverrides): Promise<[string]>

    destroy(
      _from: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'destroy(address,uint256)'(
      _from: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'transfer(address,uint256)'(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    transfersEnabled(overrides?: CallOverrides): Promise<[boolean]>

    'transfersEnabled()'(overrides?: CallOverrides): Promise<[boolean]>

    newOwner(overrides?: CallOverrides): Promise<[string]>

    'newOwner()'(overrides?: CallOverrides): Promise<[string]>

    allowance(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'allowance(address,address)'(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    transferOwnership(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'transferOwnership(address)'(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>
  }

  name(overrides?: CallOverrides): Promise<string>

  'name()'(overrides?: CallOverrides): Promise<string>

  approve(
    _spender: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'approve(address,uint256)'(
    _spender: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  disableTransfers(
    _disable: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'disableTransfers(bool)'(
    _disable: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>

  'totalSupply()'(overrides?: CallOverrides): Promise<BigNumber>

  transferFrom(
    _from: string,
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'transferFrom(address,address,uint256)'(
    _from: string,
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  decimals(overrides?: CallOverrides): Promise<number>

  'decimals()'(overrides?: CallOverrides): Promise<number>

  version(overrides?: CallOverrides): Promise<string>

  'version()'(overrides?: CallOverrides): Promise<string>

  withdrawTokens(
    _token: string,
    _to: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'withdrawTokens(address,address,uint256)'(
    _token: string,
    _to: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  balanceOf(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

  'balanceOf(address)'(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  acceptOwnership(overrides?: Overrides): Promise<ContractTransaction>

  'acceptOwnership()'(overrides?: Overrides): Promise<ContractTransaction>

  issue(
    _to: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'issue(address,uint256)'(
    _to: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  owner(overrides?: CallOverrides): Promise<string>

  'owner()'(overrides?: CallOverrides): Promise<string>

  symbol(overrides?: CallOverrides): Promise<string>

  'symbol()'(overrides?: CallOverrides): Promise<string>

  destroy(
    _from: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'destroy(address,uint256)'(
    _from: string,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  transfer(
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'transfer(address,uint256)'(
    _to: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  transfersEnabled(overrides?: CallOverrides): Promise<boolean>

  'transfersEnabled()'(overrides?: CallOverrides): Promise<boolean>

  newOwner(overrides?: CallOverrides): Promise<string>

  'newOwner()'(overrides?: CallOverrides): Promise<string>

  allowance(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'allowance(address,address)'(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  transferOwnership(
    _newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'transferOwnership(address)'(
    _newOwner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  callStatic: {
    name(overrides?: CallOverrides): Promise<string>

    'name()'(overrides?: CallOverrides): Promise<string>

    approve(
      _spender: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    'approve(address,uint256)'(
      _spender: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    disableTransfers(
      _disable: boolean,
      overrides?: CallOverrides
    ): Promise<void>

    'disableTransfers(bool)'(
      _disable: boolean,
      overrides?: CallOverrides
    ): Promise<void>

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>

    'totalSupply()'(overrides?: CallOverrides): Promise<BigNumber>

    transferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    'transferFrom(address,address,uint256)'(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    decimals(overrides?: CallOverrides): Promise<number>

    'decimals()'(overrides?: CallOverrides): Promise<number>

    version(overrides?: CallOverrides): Promise<string>

    'version()'(overrides?: CallOverrides): Promise<string>

    withdrawTokens(
      _token: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    'withdrawTokens(address,address,uint256)'(
      _token: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    balanceOf(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    'balanceOf(address)'(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    acceptOwnership(overrides?: CallOverrides): Promise<void>

    'acceptOwnership()'(overrides?: CallOverrides): Promise<void>

    issue(
      _to: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    'issue(address,uint256)'(
      _to: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    owner(overrides?: CallOverrides): Promise<string>

    'owner()'(overrides?: CallOverrides): Promise<string>

    symbol(overrides?: CallOverrides): Promise<string>

    'symbol()'(overrides?: CallOverrides): Promise<string>

    destroy(
      _from: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    'destroy(address,uint256)'(
      _from: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    'transfer(address,uint256)'(
      _to: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    transfersEnabled(overrides?: CallOverrides): Promise<boolean>

    'transfersEnabled()'(overrides?: CallOverrides): Promise<boolean>

    newOwner(overrides?: CallOverrides): Promise<string>

    'newOwner()'(overrides?: CallOverrides): Promise<string>

    allowance(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'allowance(address,address)'(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    transferOwnership(
      _newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>

    'transferOwnership(address)'(
      _newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>
  }

  filters: {
    NewSmartToken(_token: null): EventFilter

    Issuance(_amount: null): EventFilter

    Destruction(_amount: null): EventFilter

    Transfer(
      _from: string | null,
      _to: string | null,
      _value: null
    ): EventFilter

    Approval(
      _owner: string | null,
      _spender: string | null,
      _value: null
    ): EventFilter

    OwnerUpdate(
      _prevOwner: string | null,
      _newOwner: string | null
    ): EventFilter
  }

  estimateGas: {
    name(overrides?: CallOverrides): Promise<BigNumber>

    'name()'(overrides?: CallOverrides): Promise<BigNumber>

    approve(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'approve(address,uint256)'(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    disableTransfers(
      _disable: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>

    'disableTransfers(bool)'(
      _disable: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>

    'totalSupply()'(overrides?: CallOverrides): Promise<BigNumber>

    transferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'transferFrom(address,address,uint256)'(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    decimals(overrides?: CallOverrides): Promise<BigNumber>

    'decimals()'(overrides?: CallOverrides): Promise<BigNumber>

    version(overrides?: CallOverrides): Promise<BigNumber>

    'version()'(overrides?: CallOverrides): Promise<BigNumber>

    withdrawTokens(
      _token: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'withdrawTokens(address,address,uint256)'(
      _token: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    balanceOf(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    'balanceOf(address)'(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    acceptOwnership(overrides?: Overrides): Promise<BigNumber>

    'acceptOwnership()'(overrides?: Overrides): Promise<BigNumber>

    issue(
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'issue(address,uint256)'(
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    owner(overrides?: CallOverrides): Promise<BigNumber>

    'owner()'(overrides?: CallOverrides): Promise<BigNumber>

    symbol(overrides?: CallOverrides): Promise<BigNumber>

    'symbol()'(overrides?: CallOverrides): Promise<BigNumber>

    destroy(
      _from: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'destroy(address,uint256)'(
      _from: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'transfer(address,uint256)'(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    transfersEnabled(overrides?: CallOverrides): Promise<BigNumber>

    'transfersEnabled()'(overrides?: CallOverrides): Promise<BigNumber>

    newOwner(overrides?: CallOverrides): Promise<BigNumber>

    'newOwner()'(overrides?: CallOverrides): Promise<BigNumber>

    allowance(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'allowance(address,address)'(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    transferOwnership(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    'transferOwnership(address)'(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<BigNumber>
  }

  populateTransaction: {
    name(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'name()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    approve(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'approve(address,uint256)'(
      _spender: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    disableTransfers(
      _disable: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'disableTransfers(bool)'(
      _disable: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'totalSupply()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    transferFrom(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'transferFrom(address,address,uint256)'(
      _from: string,
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    decimals(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'decimals()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    version(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'version()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    withdrawTokens(
      _token: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'withdrawTokens(address,address,uint256)'(
      _token: string,
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    balanceOf(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'balanceOf(address)'(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    acceptOwnership(overrides?: Overrides): Promise<PopulatedTransaction>

    'acceptOwnership()'(overrides?: Overrides): Promise<PopulatedTransaction>

    issue(
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'issue(address,uint256)'(
      _to: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'owner()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'symbol()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    destroy(
      _from: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'destroy(address,uint256)'(
      _from: string,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    transfer(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'transfer(address,uint256)'(
      _to: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    transfersEnabled(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'transfersEnabled()'(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    newOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'newOwner()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    allowance(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'allowance(address,address)'(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    transferOwnership(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'transferOwnership(address)'(
      _newOwner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>
  }
}
