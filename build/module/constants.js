import { MaxUint256 } from '@ethersproject/constants'
import { ADDRESSES, BNT, ETH, ETH_BNT_ANCHOR } from '@xtoken/abis'
import { BigNumber } from 'ethers'
import { parseEther } from 'ethers/lib/utils'
export const DEC_18 = parseEther('1')
export const GAS_LIMIT_PERCENTAGE_DEFAULT = 110
export const GAS_LIMIT_PERCENTAGE_ETH = 120
export const MAX_UINT = MaxUint256
export const ZERO_NUMBER = BigNumber.from('0')
export var ChainId
;(function (ChainId) {
  ChainId[(ChainId['Mainnet'] = 1)] = 'Mainnet'
  ChainId[(ChainId['Arbitrum'] = 42161)] = 'Arbitrum'
  ChainId[(ChainId['ArbitrumTestnet'] = 421611)] = 'ArbitrumTestnet'
})(ChainId || (ChainId = {}))
// DEX
export var Exchange
;(function (Exchange) {
  Exchange['BALANCER'] = 'Balancer'
  Exchange['BANCOR'] = 'Bancor'
  Exchange['INCH'] = '1Inch'
  Exchange['KYBER'] = 'Kyber'
  Exchange['UNISWAP'] = 'Uniswap'
  Exchange['UNISWAP_V3'] = 'Uniswap V3'
  Exchange['XTOKEN'] = 'xToken'
})(Exchange || (Exchange = {}))
// Default values
export const DEFAULT_PRICES = Object.freeze({
  aum: 0,
  priceBtc: 0,
  priceEth: 0,
  priceUsd: 0,
  sellPriceEth: 0,
})
export const DEFAULT_LP_PORTFOLIO_ITEM = Object.freeze({
  price: '0',
  quantity: '0',
  value: '0',
})
export const DEFAULT_PORTFOLIO_ITEM = Object.freeze({
  ...DEFAULT_LP_PORTFOLIO_ITEM,
  tokenEquivalent: '0',
})
export const DEFAULT_TOKEN_PRICES = Object.freeze({
  token0Price: parseEther('0'),
  token1Price: parseEther('0'),
})
// BNT->ETH path
export const BNT_ETH_PATH = [
  ADDRESSES[BNT][1],
  ADDRESSES[ETH_BNT_ANCHOR][1],
  ADDRESSES[ETH],
]
export const X_SNX_A_BALANCER_V2_POOL_ID =
  '0xea39581977325c0833694d51656316ef8a926a62000200000000000000000036'
export const SNX_BALANCER_V2_POOL_ID =
  '0x072f14b85add63488ddad88f855fda4a99d6ac9b000200000000000000000027'
// Staking
export const STAKE = 'Stake'
export const UNSTAKE = 'UnStake'
export const Errors = Object.freeze({
  CONTRACT_INITIALIZATION_FAILED: 'Error while initializing the contract',
  INVALID_AMOUNT_VALUE: 'Invalid value for amount',
  INVALID_USER_ADDRESS: 'Invalid user address',
  TOKENS_NOT_APPROVED: 'Please approve the tokens before proceeding',
})
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sMEJBQTBCLENBQUE7QUFDckQsT0FBTyxFQUFFLFNBQVMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLGNBQWMsRUFBRSxNQUFNLGNBQWMsQ0FBQTtBQUNsRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sUUFBUSxDQUFBO0FBQ2xDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQTtBQUU3QyxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFBO0FBQ3JDLE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUFHLEdBQUcsQ0FBQTtBQUMvQyxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRyxHQUFHLENBQUE7QUFDM0MsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLFVBQVUsQ0FBQTtBQUNsQyxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtBQUU5QyxNQUFNLENBQU4sSUFBWSxPQUlYO0FBSkQsV0FBWSxPQUFPO0lBQ2pCLDJDQUFXLENBQUE7SUFDWCxpREFBZ0IsQ0FBQTtJQUNoQixnRUFBd0IsQ0FBQTtBQUMxQixDQUFDLEVBSlcsT0FBTyxLQUFQLE9BQU8sUUFJbEI7QUFFRCxNQUFNO0FBQ04sTUFBTSxDQUFOLElBQVksUUFRWDtBQVJELFdBQVksUUFBUTtJQUNsQixpQ0FBcUIsQ0FBQTtJQUNyQiw2QkFBaUIsQ0FBQTtJQUNqQiwwQkFBYyxDQUFBO0lBQ2QsMkJBQWUsQ0FBQTtJQUNmLCtCQUFtQixDQUFBO0lBQ25CLHFDQUF5QixDQUFBO0lBQ3pCLDZCQUFpQixDQUFBO0FBQ25CLENBQUMsRUFSVyxRQUFRLEtBQVIsUUFBUSxRQVFuQjtBQUVELGlCQUFpQjtBQUNqQixNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUMxQyxHQUFHLEVBQUUsQ0FBQztJQUNOLFFBQVEsRUFBRSxDQUFDO0lBQ1gsUUFBUSxFQUFFLENBQUM7SUFDWCxRQUFRLEVBQUUsQ0FBQztJQUNYLFlBQVksRUFBRSxDQUFDO0NBQ2hCLENBQUMsQ0FBQTtBQUVGLE1BQU0sQ0FBQyxNQUFNLHlCQUF5QixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7SUFDckQsS0FBSyxFQUFFLEdBQUc7SUFDVixRQUFRLEVBQUUsR0FBRztJQUNiLEtBQUssRUFBRSxHQUFHO0NBQ1gsQ0FBQyxDQUFBO0FBRUYsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNsRCxHQUFHLHlCQUF5QjtJQUM1QixlQUFlLEVBQUUsR0FBRztDQUNyQixDQUFDLENBQUE7QUFFRixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO0lBQ2hELFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxDQUFDO0lBQzVCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxDQUFDO0NBQzdCLENBQUMsQ0FBQTtBQUVGLGdCQUFnQjtBQUNoQixNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUc7SUFDMUIsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNqQixTQUFTLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzVCLFNBQVMsQ0FBQyxHQUFHLENBQVc7Q0FDekIsQ0FBQTtBQUVELE1BQU0sQ0FBQyxNQUFNLDJCQUEyQixHQUN0QyxvRUFBb0UsQ0FBQTtBQUV0RSxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FDbEMsb0VBQW9FLENBQUE7QUFFdEUsVUFBVTtBQUNWLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxPQUFPLENBQUE7QUFDNUIsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLFNBQVMsQ0FBQTtBQUVoQyxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNsQyw4QkFBOEIsRUFBRSx1Q0FBdUM7SUFDdkUsb0JBQW9CLEVBQUUsMEJBQTBCO0lBQ2hELG9CQUFvQixFQUFFLHNCQUFzQjtJQUM1QyxtQkFBbUIsRUFBRSw2Q0FBNkM7Q0FDbkUsQ0FBQyxDQUFBIn0=
