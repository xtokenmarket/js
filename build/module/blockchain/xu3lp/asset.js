import {
  X_U3LP_A,
  X_U3LP_B,
  X_U3LP_C,
  X_U3LP_D,
  X_U3LP_E,
  X_U3LP_F,
  X_U3LP_G,
  X_U3LP_H,
} from '@xtoken/abis'
import { capitalizeToken, getLPTokenSymbol } from '../utils'
import { getXU3LPContracts } from './helper'
import { getXU3LPPrices } from './prices'
export const getXU3LPAsset = async (symbol, provider) => {
  const tokens = getLPTokenSymbol(symbol)
  const assets = `${capitalizeToken(tokens[0])}-${capitalizeToken(tokens[1])}`
  const { kyberProxyContract, xu3lpContract } = await getXU3LPContracts(
    symbol,
    provider
  )
  const { aum, priceBtc, priceEth, priceUsd } = await getXU3LPPrices(
    xu3lpContract,
    kyberProxyContract
  )
  let order = -1
  switch (symbol) {
    case X_U3LP_A:
      order = 9
      break
    case X_U3LP_B:
      order = 10
      break
    case X_U3LP_C:
      order = 11
      break
    case X_U3LP_D:
      order = 12
      break
    case X_U3LP_E:
      order = 13
      break
    case X_U3LP_F:
      order = 14
      break
    case X_U3LP_G:
      order = 15
      break
    case X_U3LP_H:
      order = 16
      break
  }
  return {
    assets,
    aum,
    mandate: `Maximize Yield: ${assets}`,
    order,
    price: priceUsd,
    priceBtc,
    priceEth,
    symbol,
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvYmxvY2tjaGFpbi94dTNscC9hc3NldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQ0wsUUFBUSxFQUNSLFFBQVEsRUFDUixRQUFRLEVBQ1IsUUFBUSxFQUNSLFFBQVEsRUFDUixRQUFRLEVBQ1IsUUFBUSxFQUNSLFFBQVEsR0FDVCxNQUFNLGNBQWMsQ0FBQTtBQUdyQixPQUFPLEVBQUUsZUFBZSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sVUFBVSxDQUFBO0FBRTVELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLFVBQVUsQ0FBQTtBQUM1QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sVUFBVSxDQUFBO0FBRXpDLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxLQUFLLEVBQ2hDLE1BQXVCLEVBQ3ZCLFFBQXNCLEVBQ0gsRUFBRTtJQUNyQixNQUFNLE1BQU0sR0FBRyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUN2QyxNQUFNLE1BQU0sR0FBRyxHQUFHLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxlQUFlLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQTtJQUU1RSxNQUFNLEVBQUUsa0JBQWtCLEVBQUUsYUFBYSxFQUFFLEdBQUcsTUFBTSxpQkFBaUIsQ0FDbkUsTUFBTSxFQUNOLFFBQVEsQ0FDVCxDQUFBO0lBRUQsTUFBTSxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxHQUFHLE1BQU0sY0FBYyxDQUNoRSxhQUFhLEVBQ2Isa0JBQWtCLENBQ25CLENBQUE7SUFFRCxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQTtJQUNkLFFBQVEsTUFBTSxFQUFFO1FBQ2QsS0FBSyxRQUFRO1lBQ1gsS0FBSyxHQUFHLENBQUMsQ0FBQTtZQUNULE1BQUs7UUFDUCxLQUFLLFFBQVE7WUFDWCxLQUFLLEdBQUcsRUFBRSxDQUFBO1lBQ1YsTUFBSztRQUNQLEtBQUssUUFBUTtZQUNYLEtBQUssR0FBRyxFQUFFLENBQUE7WUFDVixNQUFLO1FBQ1AsS0FBSyxRQUFRO1lBQ1gsS0FBSyxHQUFHLEVBQUUsQ0FBQTtZQUNWLE1BQUs7UUFDUCxLQUFLLFFBQVE7WUFDWCxLQUFLLEdBQUcsRUFBRSxDQUFBO1lBQ1YsTUFBSztRQUNQLEtBQUssUUFBUTtZQUNYLEtBQUssR0FBRyxFQUFFLENBQUE7WUFDVixNQUFLO1FBQ1AsS0FBSyxRQUFRO1lBQ1gsS0FBSyxHQUFHLEVBQUUsQ0FBQTtZQUNWLE1BQUs7UUFDUCxLQUFLLFFBQVE7WUFDWCxLQUFLLEdBQUcsRUFBRSxDQUFBO1lBQ1YsTUFBSztLQUNSO0lBRUQsT0FBTztRQUNMLE1BQU07UUFDTixHQUFHO1FBQ0gsT0FBTyxFQUFFLG1CQUFtQixNQUFNLEVBQUU7UUFDcEMsS0FBSztRQUNMLEtBQUssRUFBRSxRQUFRO1FBQ2YsUUFBUTtRQUNSLFFBQVE7UUFDUixNQUFNO0tBQ1AsQ0FBQTtBQUNILENBQUMsQ0FBQSJ9
