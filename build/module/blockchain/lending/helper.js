import {
  LENDING_COMPTROLLER,
  LENDING_LIQUIDITY_POOL,
  LENDING_LPT,
  // LENDING_X_AAVE_A_MARKET,
  LENDING_X_AAVE_A_PRICE,
  // LENDING_X_AAVE_B_MARKET,
  LENDING_X_AAVE_B_PRICE,
  LENDING_X_INCH_A_MARKET,
  LENDING_X_INCH_A_PRICE,
  // LENDING_X_INCH_B_MARKET,
  LENDING_X_INCH_B_PRICE,
  // LENDING_X_KNC_A_MARKET,
  LENDING_X_KNC_A_PRICE,
  // LENDING_X_KNC_B_MARKET,
  LENDING_X_KNC_B_PRICE,
} from '@xtoken/abis'
import { Errors } from '../../constants'
import { getContract } from '../utils'
const CONTRACT_ERROR = new Error(Errors.CONTRACT_INITIALIZATION_FAILED)
export const getComptrollerContract = async (provider) => {
  const network = await provider.getNetwork()
  const comptrollerContract = getContract(
    LENDING_COMPTROLLER,
    provider,
    network
  )
  if (!comptrollerContract) {
    return Promise.reject(CONTRACT_ERROR)
  }
  return comptrollerContract
}
export const getLiquidityPoolContract = async (provider) => {
  const network = await provider.getNetwork()
  const liquidityPoolContract = getContract(
    LENDING_LIQUIDITY_POOL,
    provider,
    network
  )
  if (!liquidityPoolContract) {
    return Promise.reject(CONTRACT_ERROR)
  }
  return liquidityPoolContract
}
export const getLPTContract = async (provider) => {
  const network = await provider.getNetwork()
  const lptContract = getContract(LENDING_LPT, provider, network)
  if (!lptContract) {
    return Promise.reject(CONTRACT_ERROR)
  }
  return lptContract
}
export const getMarketContracts = async (provider) => {
  const network = await provider.getNetwork()
  // xAAVE Market Contracts
  /*const xAAVEaMarketContract = getContract(
      LENDING_X_AAVE_A_MARKET,
      provider,
      network
    ) as Market
    const xAAVEbMarketContract = getContract(
      LENDING_X_AAVE_B_MARKET,
      provider,
      network
    ) as Market*/
  // xINCH Market Contracts
  const xINCHaMarketContract = getContract(
    LENDING_X_INCH_A_MARKET,
    provider,
    network
  )
  /*const xINCHbMarketContract = getContract(
      LENDING_X_INCH_B_MARKET,
      provider,
      network
    ) as Market
  
    // xKNC Market Contracts
    const xKNCaMarketContract = getContract(
      LENDING_X_KNC_A_MARKET,
      provider,
      network
    ) as Market
    const xKNCbMarketContract = getContract(
      LENDING_X_KNC_B_MARKET,
      provider,
      network
    ) as Market*/
  if (
    // !xAAVEaMarketContract ||
    // !xAAVEbMarketContract ||
    !xINCHaMarketContract
    // !xINCHbMarketContract ||
    // !xKNCaMarketContract ||
    // !xKNCbMarketContract
  ) {
    return Promise.reject(CONTRACT_ERROR)
  }
  return {
    // [LENDING_X_AAVE_A_MARKET]: xAAVEaMarketContract,
    // [LENDING_X_AAVE_B_MARKET]: xAAVEbMarketContract,
    [LENDING_X_INCH_A_MARKET]: xINCHaMarketContract,
  }
}
export const getPricingContracts = async (provider) => {
  const network = await provider.getNetwork()
  // xAAVE Price Contracts
  const xAAVEaPriceContract = getContract(
    LENDING_X_AAVE_A_PRICE,
    provider,
    network
  )
  const xAAVEbPriceContract = getContract(
    LENDING_X_AAVE_B_PRICE,
    provider,
    network
  )
  // xINCH Price Contracts
  const xINCHaPriceContract = getContract(
    LENDING_X_INCH_A_PRICE,
    provider,
    network
  )
  const xINCHbPriceContract = getContract(
    LENDING_X_INCH_B_PRICE,
    provider,
    network
  )
  // xKNC Price Contracts
  const xKNCaPriceContract = getContract(
    LENDING_X_KNC_A_PRICE,
    provider,
    network
  )
  const xKNCbPriceContract = getContract(
    LENDING_X_KNC_B_PRICE,
    provider,
    network
  )
  if (
    !xAAVEaPriceContract ||
    !xAAVEbPriceContract ||
    !xINCHaPriceContract ||
    !xINCHbPriceContract ||
    !xKNCaPriceContract ||
    !xKNCbPriceContract
  ) {
    return Promise.reject(CONTRACT_ERROR)
  }
  return {
    [LENDING_X_AAVE_A_PRICE]: xAAVEaPriceContract,
    [LENDING_X_AAVE_B_PRICE]: xAAVEbPriceContract,
    [LENDING_X_INCH_A_PRICE]: xINCHaPriceContract,
    [LENDING_X_INCH_B_PRICE]: xINCHbPriceContract,
    [LENDING_X_KNC_A_PRICE]: xKNCaPriceContract,
    [LENDING_X_KNC_B_PRICE]: xKNCbPriceContract,
  }
}
export const getLendingContracts = async (provider) => {
  const [
    comptrollerContract,
    liquidityPoolContract,
    lptContract,
    marketContracts,
    pricingContracts,
  ] = await Promise.all([
    getComptrollerContract(provider),
    getLiquidityPoolContract(provider),
    getLPTContract(provider),
    getMarketContracts(provider),
    getPricingContracts(provider),
  ])
  return {
    comptrollerContract,
    liquidityPoolContract,
    lptContract,
    marketContracts,
    pricingContracts,
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2Jsb2NrY2hhaW4vbGVuZGluZy9oZWxwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUNMLG1CQUFtQixFQUNuQixzQkFBc0IsRUFDdEIsV0FBVztBQUNYLDJCQUEyQjtBQUMzQixzQkFBc0I7QUFDdEIsMkJBQTJCO0FBQzNCLHNCQUFzQixFQUN0Qix1QkFBdUIsRUFDdkIsc0JBQXNCO0FBQ3RCLDJCQUEyQjtBQUMzQixzQkFBc0I7QUFDdEIsMEJBQTBCO0FBQzFCLHFCQUFxQjtBQUNyQiwwQkFBMEI7QUFDMUIscUJBQXFCLEdBQ3RCLE1BQU0sY0FBYyxDQUFBO0FBRXJCLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQTtBQVd4QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sVUFBVSxDQUFBO0FBRXRDLE1BQU0sY0FBYyxHQUFHLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyw4QkFBOEIsQ0FBQyxDQUFBO0FBRXZFLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUFHLEtBQUssRUFBRSxRQUFzQixFQUFFLEVBQUU7SUFDckUsTUFBTSxPQUFPLEdBQUcsTUFBTSxRQUFRLENBQUMsVUFBVSxFQUFFLENBQUE7SUFDM0MsTUFBTSxtQkFBbUIsR0FBRyxXQUFXLENBQ3JDLG1CQUFtQixFQUNuQixRQUFRLEVBQ1IsT0FBTyxDQUNPLENBQUE7SUFDaEIsSUFBSSxDQUFDLG1CQUFtQixFQUFFO1FBQ3hCLE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQTtLQUN0QztJQUNELE9BQU8sbUJBQW1CLENBQUE7QUFDNUIsQ0FBQyxDQUFBO0FBRUQsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQUcsS0FBSyxFQUFFLFFBQXNCLEVBQUUsRUFBRTtJQUN2RSxNQUFNLE9BQU8sR0FBRyxNQUFNLFFBQVEsQ0FBQyxVQUFVLEVB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
