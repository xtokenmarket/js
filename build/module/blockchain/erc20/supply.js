import { Abi, ADDRESSES } from '@xtoken/abis'
import { ethers } from 'ethers'
import { formatUnits } from 'ethers/lib/utils'
export const getTokenSupply = async (symbol, provider) => {
  const { chainId } = await provider.getNetwork()
  const tokenAddress = ADDRESSES[symbol][chainId]
  const contract = new ethers.Contract(tokenAddress, Abi.ERC20, provider)
  const [totalSupply, decimals] = await Promise.all([
    contract.totalSupply(),
    contract.decimals(),
  ])
  return formatUnits(totalSupply, decimals)
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VwcGx5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2Jsb2NrY2hhaW4vZXJjMjAvc3VwcGx5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFlLE1BQU0sY0FBYyxDQUFBO0FBQzFELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxRQUFRLENBQUE7QUFDL0IsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFBO0FBSzlDLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxLQUFLLEVBQ2pDLE1BQTBFLEVBQzFFLFFBQXNCLEVBQ3RCLEVBQUU7SUFDRixNQUFNLEVBQUUsT0FBTyxFQUFFLEdBQUcsTUFBTSxRQUFRLENBQUMsVUFBVSxFQUFFLENBQUE7SUFDL0MsTUFBTSxZQUFZLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFBO0lBQy9DLE1BQU0sUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FDbEMsWUFBWSxFQUNaLEdBQUcsQ0FBQyxLQUFLLEVBQ1QsUUFBUSxDQUNBLENBQUE7SUFDVixNQUFNLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxHQUFHLE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQztRQUNoRCxRQUFRLENBQUMsV0FBVyxFQUFFO1FBQ3RCLFFBQVEsQ0FBQyxRQUFRLEVBQUU7S0FDcEIsQ0FBQyxDQUFBO0lBQ0YsT0FBTyxXQUFXLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFBO0FBQzNDLENBQUMsQ0FBQSJ9
