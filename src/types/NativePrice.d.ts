/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from 'ethers'
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from '@ethersproject/contracts'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'

interface NativePriceInterface extends ethers.utils.Interface {
  functions: {
    'getPrice()': FunctionFragment
    'initialize(address,address)': FunctionFragment
    'underlyingPriceFeedAddress()': FunctionFragment
    'usdcPriceFeedAddress()': FunctionFragment
  }

  encodeFunctionData(functionFragment: 'getPrice', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'initialize',
    values: [string, string]
  ): string
  encodeFunctionData(
    functionFragment: 'underlyingPriceFeedAddress',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'usdcPriceFeedAddress',
    values?: undefined
  ): string

  decodeFunctionResult(functionFragment: 'getPrice', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'initialize', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'underlyingPriceFeedAddress',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'usdcPriceFeedAddress',
    data: BytesLike
  ): Result

  events: {}
}

export class NativePrice extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  on(event: EventFilter | string, listener: Listener): this
  once(event: EventFilter | string, listener: Listener): this
  addListener(eventName: EventFilter | string, listener: Listener): this
  removeAllListeners(eventName: EventFilter | string): this
  removeListener(eventName: any, listener: Listener): this

  interface: NativePriceInterface

  functions: {
    getPrice(overrides?: CallOverrides): Promise<[BigNumber]>

    'getPrice()'(overrides?: CallOverrides): Promise<[BigNumber]>

    initialize(
      _underlyingPriceFeedAddress: string,
      _usdcPriceFeedAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'initialize(address,address)'(
      _underlyingPriceFeedAddress: string,
      _usdcPriceFeedAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    underlyingPriceFeedAddress(overrides?: CallOverrides): Promise<[string]>

    'underlyingPriceFeedAddress()'(overrides?: CallOverrides): Promise<[string]>

    usdcPriceFeedAddress(overrides?: CallOverrides): Promise<[string]>

    'usdcPriceFeedAddress()'(overrides?: CallOverrides): Promise<[string]>
  }

  getPrice(overrides?: CallOverrides): Promise<BigNumber>

  'getPrice()'(overrides?: CallOverrides): Promise<BigNumber>

  initialize(
    _underlyingPriceFeedAddress: string,
    _usdcPriceFeedAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'initialize(address,address)'(
    _underlyingPriceFeedAddress: string,
    _usdcPriceFeedAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  underlyingPriceFeedAddress(overrides?: CallOverrides): Promise<string>

  'underlyingPriceFeedAddress()'(overrides?: CallOverrides): Promise<string>

  usdcPriceFeedAddress(overrides?: CallOverrides): Promise<string>

  'usdcPriceFeedAddress()'(overrides?: CallOverrides): Promise<string>

  callStatic: {
    getPrice(overrides?: CallOverrides): Promise<BigNumber>

    'getPrice()'(overrides?: CallOverrides): Promise<BigNumber>

    initialize(
      _underlyingPriceFeedAddress: string,
      _usdcPriceFeedAddress: string,
      overrides?: CallOverrides
    ): Promise<void>

    'initialize(address,address)'(
      _underlyingPriceFeedAddress: string,
      _usdcPriceFeedAddress: string,
      overrides?: CallOverrides
    ): Promise<void>

    underlyingPriceFeedAddress(overrides?: CallOverrides): Promise<string>

    'underlyingPriceFeedAddress()'(overrides?: CallOverrides): Promise<string>

    usdcPriceFeedAddress(overrides?: CallOverrides): Promise<string>

    'usdcPriceFeedAddress()'(overrides?: CallOverrides): Promise<string>
  }

  filters: {}

  estimateGas: {
    getPrice(overrides?: CallOverrides): Promise<BigNumber>

    'getPrice()'(overrides?: CallOverrides): Promise<BigNumber>

    initialize(
      _underlyingPriceFeedAddress: string,
      _usdcPriceFeedAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    'initialize(address,address)'(
      _underlyingPriceFeedAddress: string,
      _usdcPriceFeedAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    underlyingPriceFeedAddress(overrides?: CallOverrides): Promise<BigNumber>

    'underlyingPriceFeedAddress()'(
      overrides?: CallOverrides
    ): Promise<BigNumber>

    usdcPriceFeedAddress(overrides?: CallOverrides): Promise<BigNumber>

    'usdcPriceFeedAddress()'(overrides?: CallOverrides): Promise<BigNumber>
  }

  populateTransaction: {
    getPrice(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'getPrice()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    initialize(
      _underlyingPriceFeedAddress: string,
      _usdcPriceFeedAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'initialize(address,address)'(
      _underlyingPriceFeedAddress: string,
      _usdcPriceFeedAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    underlyingPriceFeedAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'underlyingPriceFeedAddress()'(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    usdcPriceFeedAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'usdcPriceFeedAddress()'(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>
  }
}
