/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from 'ethers'
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from '@ethersproject/contracts'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'

interface SynthetixInterface extends ethers.utils.Interface {
  functions: {
    'DECIMALS()': FunctionFragment
    'MAX_ADDRESSES_FROM_RESOLVER()': FunctionFragment
    'SELFDESTRUCT_DELAY()': FunctionFragment
    'TOKEN_NAME()': FunctionFragment
    'TOKEN_SYMBOL()': FunctionFragment
    'acceptOwnership()': FunctionFragment
    'allowance(address,address)': FunctionFragment
    'anySynthOrSNXRateIsStale()': FunctionFragment
    'approve(address,uint256)': FunctionFragment
    'availableCurrencyKeys()': FunctionFragment
    'availableSynthCount()': FunctionFragment
    'availableSynths(uint256)': FunctionFragment
    'balanceOf(address)': FunctionFragment
    'burnSynths(uint256)': FunctionFragment
    'burnSynthsOnBehalf(address,uint256)': FunctionFragment
    'burnSynthsToTarget()': FunctionFragment
    'burnSynthsToTargetOnBehalf(address)': FunctionFragment
    'collateral(address)': FunctionFragment
    'collateralisationRatio(address)': FunctionFragment
    'debtBalanceOf(address,bytes32)': FunctionFragment
    'decimals()': FunctionFragment
    'emitExchangeRebate(address,bytes32,uint256)': FunctionFragment
    'emitExchangeReclaim(address,bytes32,uint256)': FunctionFragment
    'emitSynthExchange(address,bytes32,uint256,bytes32,uint256,address)': FunctionFragment
    'exchange(bytes32,uint256,bytes32)': FunctionFragment
    'exchangeOnBehalf(address,bytes32,uint256,bytes32)': FunctionFragment
    'getResolverAddressesRequired()': FunctionFragment
    'initiateSelfDestruct()': FunctionFragment
    'initiationTime()': FunctionFragment
    'integrationProxy()': FunctionFragment
    'isResolverCached(address)': FunctionFragment
    'isWaitingPeriod(bytes32)': FunctionFragment
    'issueMaxSynths()': FunctionFragment
    'issueMaxSynthsOnBehalf(address)': FunctionFragment
    'issueSynths(uint256)': FunctionFragment
    'issueSynthsOnBehalf(address,uint256)': FunctionFragment
    'liquidateDelinquentAccount(address,uint256)': FunctionFragment
    'maxIssuableSynths(address)': FunctionFragment
    'messageSender()': FunctionFragment
    'mint()': FunctionFragment
    'name()': FunctionFragment
    'nominateNewOwner(address)': FunctionFragment
    'nominatedOwner()': FunctionFragment
    'owner()': FunctionFragment
    'proxy()': FunctionFragment
    'remainingIssuableSynths(address)': FunctionFragment
    'resolver()': FunctionFragment
    'resolverAddressesRequired(uint256)': FunctionFragment
    'sUSD()': FunctionFragment
    'selfDestruct()': FunctionFragment
    'selfDestructBeneficiary()': FunctionFragment
    'selfDestructInitiated()': FunctionFragment
    'setIntegrationProxy(address)': FunctionFragment
    'setMessageSender(address)': FunctionFragment
    'setProxy(address)': FunctionFragment
    'setResolverAndSyncCache(address)': FunctionFragment
    'setSelfDestructBeneficiary(address)': FunctionFragment
    'setTokenState(address)': FunctionFragment
    'settle(bytes32)': FunctionFragment
    'symbol()': FunctionFragment
    'synths(bytes32)': FunctionFragment
    'synthsByAddress(address)': FunctionFragment
    'terminateSelfDestruct()': FunctionFragment
    'tokenState()': FunctionFragment
    'totalIssuedSynths(bytes32)': FunctionFragment
    'totalIssuedSynthsExcludeEtherCollateral(bytes32)': FunctionFragment
    'totalSupply()': FunctionFragment
    'transfer(address,uint256)': FunctionFragment
    'transferFrom(address,address,uint256)': FunctionFragment
    'transferableSynthetix(address)': FunctionFragment
  }

  encodeFunctionData(functionFragment: 'DECIMALS', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'MAX_ADDRESSES_FROM_RESOLVER',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'SELFDESTRUCT_DELAY',
    values?: undefined
  ): string
  encodeFunctionData(functionFragment: 'TOKEN_NAME', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'TOKEN_SYMBOL',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'acceptOwnership',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'allowance',
    values: [string, string]
  ): string
  encodeFunctionData(
    functionFragment: 'anySynthOrSNXRateIsStale',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'approve',
    values: [string, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'availableCurrencyKeys',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'availableSynthCount',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'availableSynths',
    values: [BigNumberish]
  ): string
  encodeFunctionData(functionFragment: 'balanceOf', values: [string]): string
  encodeFunctionData(
    functionFragment: 'burnSynths',
    values: [BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'burnSynthsOnBehalf',
    values: [string, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'burnSynthsToTarget',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'burnSynthsToTargetOnBehalf',
    values: [string]
  ): string
  encodeFunctionData(functionFragment: 'collateral', values: [string]): string
  encodeFunctionData(
    functionFragment: 'collateralisationRatio',
    values: [string]
  ): string
  encodeFunctionData(
    functionFragment: 'debtBalanceOf',
    values: [string, BytesLike]
  ): string
  encodeFunctionData(functionFragment: 'decimals', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'emitExchangeRebate',
    values: [string, BytesLike, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'emitExchangeReclaim',
    values: [string, BytesLike, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'emitSynthExchange',
    values: [string, BytesLike, BigNumberish, BytesLike, BigNumberish, string]
  ): string
  encodeFunctionData(
    functionFragment: 'exchange',
    values: [BytesLike, BigNumberish, BytesLike]
  ): string
  encodeFunctionData(
    functionFragment: 'exchangeOnBehalf',
    values: [string, BytesLike, BigNumberish, BytesLike]
  ): string
  encodeFunctionData(
    functionFragment: 'getResolverAddressesRequired',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'initiateSelfDestruct',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'initiationTime',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'integrationProxy',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'isResolverCached',
    values: [string]
  ): string
  encodeFunctionData(
    functionFragment: 'isWaitingPeriod',
    values: [BytesLike]
  ): string
  encodeFunctionData(
    functionFragment: 'issueMaxSynths',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'issueMaxSynthsOnBehalf',
    values: [string]
  ): string
  encodeFunctionData(
    functionFragment: 'issueSynths',
    values: [BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'issueSynthsOnBehalf',
    values: [string, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'liquidateDelinquentAccount',
    values: [string, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'maxIssuableSynths',
    values: [string]
  ): string
  encodeFunctionData(
    functionFragment: 'messageSender',
    values?: undefined
  ): string
  encodeFunctionData(functionFragment: 'mint', values?: undefined): string
  encodeFunctionData(functionFragment: 'name', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'nominateNewOwner',
    values: [string]
  ): string
  encodeFunctionData(
    functionFragment: 'nominatedOwner',
    values?: undefined
  ): string
  encodeFunctionData(functionFragment: 'owner', values?: undefined): string
  encodeFunctionData(functionFragment: 'proxy', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'remainingIssuableSynths',
    values: [string]
  ): string
  encodeFunctionData(functionFragment: 'resolver', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'resolverAddressesRequired',
    values: [BigNumberish]
  ): string
  encodeFunctionData(functionFragment: 'sUSD', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'selfDestruct',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'selfDestructBeneficiary',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'selfDestructInitiated',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'setIntegrationProxy',
    values: [string]
  ): string
  encodeFunctionData(
    functionFragment: 'setMessageSender',
    values: [string]
  ): string
  encodeFunctionData(functionFragment: 'setProxy', values: [string]): string
  encodeFunctionData(
    functionFragment: 'setResolverAndSyncCache',
    values: [string]
  ): string
  encodeFunctionData(
    functionFragment: 'setSelfDestructBeneficiary',
    values: [string]
  ): string
  encodeFunctionData(
    functionFragment: 'setTokenState',
    values: [string]
  ): string
  encodeFunctionData(functionFragment: 'settle', values: [BytesLike]): string
  encodeFunctionData(functionFragment: 'symbol', values?: undefined): string
  encodeFunctionData(functionFragment: 'synths', values: [BytesLike]): string
  encodeFunctionData(
    functionFragment: 'synthsByAddress',
    values: [string]
  ): string
  encodeFunctionData(
    functionFragment: 'terminateSelfDestruct',
    values?: undefined
  ): string
  encodeFunctionData(functionFragment: 'tokenState', values?: undefined): string
  encodeFunctionData(
    functionFragment: 'totalIssuedSynths',
    values: [BytesLike]
  ): string
  encodeFunctionData(
    functionFragment: 'totalIssuedSynthsExcludeEtherCollateral',
    values: [BytesLike]
  ): string
  encodeFunctionData(
    functionFragment: 'totalSupply',
    values?: undefined
  ): string
  encodeFunctionData(
    functionFragment: 'transfer',
    values: [string, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'transferFrom',
    values: [string, string, BigNumberish]
  ): string
  encodeFunctionData(
    functionFragment: 'transferableSynthetix',
    values: [string]
  ): string

  decodeFunctionResult(functionFragment: 'DECIMALS', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'MAX_ADDRESSES_FROM_RESOLVER',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'SELFDESTRUCT_DELAY',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'TOKEN_NAME', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'TOKEN_SYMBOL',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'acceptOwnership',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'allowance', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'anySynthOrSNXRateIsStale',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'approve', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'availableCurrencyKeys',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'availableSynthCount',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'availableSynths',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'balanceOf', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'burnSynths', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'burnSynthsOnBehalf',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'burnSynthsToTarget',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'burnSynthsToTargetOnBehalf',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'collateral', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'collateralisationRatio',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'debtBalanceOf',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'decimals', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'emitExchangeRebate',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'emitExchangeReclaim',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'emitSynthExchange',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'exchange', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'exchangeOnBehalf',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'getResolverAddressesRequired',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'initiateSelfDestruct',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'initiationTime',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'integrationProxy',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'isResolverCached',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'isWaitingPeriod',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'issueMaxSynths',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'issueMaxSynthsOnBehalf',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'issueSynths', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'issueSynthsOnBehalf',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'liquidateDelinquentAccount',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'maxIssuableSynths',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'messageSender',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'mint', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'name', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'nominateNewOwner',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'nominatedOwner',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'proxy', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'remainingIssuableSynths',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'resolver', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'resolverAddressesRequired',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'sUSD', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'selfDestruct',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'selfDestructBeneficiary',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'selfDestructInitiated',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'setIntegrationProxy',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'setMessageSender',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'setProxy', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'setResolverAndSyncCache',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'setSelfDestructBeneficiary',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'setTokenState',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'settle', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'symbol', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'synths', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'synthsByAddress',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'terminateSelfDestruct',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'tokenState', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'totalIssuedSynths',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'totalIssuedSynthsExcludeEtherCollateral',
    data: BytesLike
  ): Result
  decodeFunctionResult(functionFragment: 'totalSupply', data: BytesLike): Result
  decodeFunctionResult(functionFragment: 'transfer', data: BytesLike): Result
  decodeFunctionResult(
    functionFragment: 'transferFrom',
    data: BytesLike
  ): Result
  decodeFunctionResult(
    functionFragment: 'transferableSynthetix',
    data: BytesLike
  ): Result

  events: {
    'AccountLiquidated(address,uint256,uint256,address)': EventFragment
    'Approval(address,address,uint256)': EventFragment
    'ExchangeRebate(address,bytes32,uint256)': EventFragment
    'ExchangeReclaim(address,bytes32,uint256)': EventFragment
    'OwnerChanged(address,address)': EventFragment
    'OwnerNominated(address)': EventFragment
    'ProxyUpdated(address)': EventFragment
    'SelfDestructBeneficiaryUpdated(address)': EventFragment
    'SelfDestructInitiated(uint256)': EventFragment
    'SelfDestructTerminated()': EventFragment
    'SelfDestructed(address)': EventFragment
    'SynthExchange(address,bytes32,uint256,bytes32,uint256,address)': EventFragment
    'TokenStateUpdated(address)': EventFragment
    'Transfer(address,address,uint256)': EventFragment
  }

  getEvent(nameOrSignatureOrTopic: 'AccountLiquidated'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'Approval'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'ExchangeRebate'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'ExchangeReclaim'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'OwnerChanged'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'OwnerNominated'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'ProxyUpdated'): EventFragment
  getEvent(
    nameOrSignatureOrTopic: 'SelfDestructBeneficiaryUpdated'
  ): EventFragment
  getEvent(nameOrSignatureOrTopic: 'SelfDestructInitiated'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'SelfDestructTerminated'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'SelfDestructed'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'SynthExchange'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'TokenStateUpdated'): EventFragment
  getEvent(nameOrSignatureOrTopic: 'Transfer'): EventFragment
}

export class Synthetix extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  on(event: EventFilter | string, listener: Listener): this
  once(event: EventFilter | string, listener: Listener): this
  addListener(eventName: EventFilter | string, listener: Listener): this
  removeAllListeners(eventName: EventFilter | string): this
  removeListener(eventName: any, listener: Listener): this

  interface: SynthetixInterface

  functions: {
    DECIMALS(overrides?: CallOverrides): Promise<[number]>

    'DECIMALS()'(overrides?: CallOverrides): Promise<[number]>

    MAX_ADDRESSES_FROM_RESOLVER(overrides?: CallOverrides): Promise<[BigNumber]>

    'MAX_ADDRESSES_FROM_RESOLVER()'(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    SELFDESTRUCT_DELAY(overrides?: CallOverrides): Promise<[BigNumber]>

    'SELFDESTRUCT_DELAY()'(overrides?: CallOverrides): Promise<[BigNumber]>

    TOKEN_NAME(overrides?: CallOverrides): Promise<[string]>

    'TOKEN_NAME()'(overrides?: CallOverrides): Promise<[string]>

    TOKEN_SYMBOL(overrides?: CallOverrides): Promise<[string]>

    'TOKEN_SYMBOL()'(overrides?: CallOverrides): Promise<[string]>

    acceptOwnership(overrides?: Overrides): Promise<ContractTransaction>

    'acceptOwnership()'(overrides?: Overrides): Promise<ContractTransaction>

    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'allowance(address,address)'(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    anySynthOrSNXRateIsStale(
      overrides?: CallOverrides
    ): Promise<[boolean] & { anyRateStale: boolean }>

    'anySynthOrSNXRateIsStale()'(
      overrides?: CallOverrides
    ): Promise<[boolean] & { anyRateStale: boolean }>

    approve(
      spender: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'approve(address,uint256)'(
      spender: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    availableCurrencyKeys(overrides?: CallOverrides): Promise<[string[]]>

    'availableCurrencyKeys()'(overrides?: CallOverrides): Promise<[string[]]>

    availableSynthCount(overrides?: CallOverrides): Promise<[BigNumber]>

    'availableSynthCount()'(overrides?: CallOverrides): Promise<[BigNumber]>

    availableSynths(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>

    'availableSynths(uint256)'(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>

    balanceOf(account: string, overrides?: CallOverrides): Promise<[BigNumber]>

    'balanceOf(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    burnSynths(
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'burnSynths(uint256)'(
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    burnSynthsOnBehalf(
      burnForAddress: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'burnSynthsOnBehalf(address,uint256)'(
      burnForAddress: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    burnSynthsToTarget(overrides?: Overrides): Promise<ContractTransaction>

    'burnSynthsToTarget()'(overrides?: Overrides): Promise<ContractTransaction>

    burnSynthsToTargetOnBehalf(
      burnForAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'burnSynthsToTargetOnBehalf(address)'(
      burnForAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    collateral(account: string, overrides?: CallOverrides): Promise<[BigNumber]>

    'collateral(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    collateralisationRatio(
      _issuer: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'collateralisationRatio(address)'(
      _issuer: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    debtBalanceOf(
      account: string,
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'debtBalanceOf(address,bytes32)'(
      account: string,
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    decimals(overrides?: CallOverrides): Promise<[number]>

    'decimals()'(overrides?: CallOverrides): Promise<[number]>

    emitExchangeRebate(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'emitExchangeRebate(address,bytes32,uint256)'(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    emitExchangeReclaim(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'emitExchangeReclaim(address,bytes32,uint256)'(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    emitSynthExchange(
      account: string,
      fromCurrencyKey: BytesLike,
      fromAmount: BigNumberish,
      toCurrencyKey: BytesLike,
      toAmount: BigNumberish,
      toAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'emitSynthExchange(address,bytes32,uint256,bytes32,uint256,address)'(
      account: string,
      fromCurrencyKey: BytesLike,
      fromAmount: BigNumberish,
      toCurrencyKey: BytesLike,
      toAmount: BigNumberish,
      toAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    exchange(
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'exchange(bytes32,uint256,bytes32)'(
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    exchangeOnBehalf(
      exchangeForAddress: string,
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'exchangeOnBehalf(address,bytes32,uint256,bytes32)'(
      exchangeForAddress: string,
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    getResolverAddressesRequired(
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string
        ]
      ] & {
        addressesRequired: [
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string
        ]
      }
    >

    'getResolverAddressesRequired()'(
      overrides?: CallOverrides
    ): Promise<
      [
        [
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string
        ]
      ] & {
        addressesRequired: [
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string,
          string
        ]
      }
    >

    initiateSelfDestruct(overrides?: Overrides): Promise<ContractTransaction>

    'initiateSelfDestruct()'(
      overrides?: Overrides
    ): Promise<ContractTransaction>

    initiationTime(overrides?: CallOverrides): Promise<[BigNumber]>

    'initiationTime()'(overrides?: CallOverrides): Promise<[BigNumber]>

    integrationProxy(overrides?: CallOverrides): Promise<[string]>

    'integrationProxy()'(overrides?: CallOverrides): Promise<[string]>

    isResolverCached(
      _resolver: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>

    'isResolverCached(address)'(
      _resolver: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>

    isWaitingPeriod(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>

    'isWaitingPeriod(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>

    issueMaxSynths(overrides?: Overrides): Promise<ContractTransaction>

    'issueMaxSynths()'(overrides?: Overrides): Promise<ContractTransaction>

    issueMaxSynthsOnBehalf(
      issueForAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'issueMaxSynthsOnBehalf(address)'(
      issueForAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    issueSynths(
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'issueSynths(uint256)'(
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    issueSynthsOnBehalf(
      issueForAddress: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'issueSynthsOnBehalf(address,uint256)'(
      issueForAddress: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    liquidateDelinquentAccount(
      account: string,
      susdAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'liquidateDelinquentAccount(address,uint256)'(
      account: string,
      susdAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    maxIssuableSynths(
      account: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { maxIssuable: BigNumber }>

    'maxIssuableSynths(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { maxIssuable: BigNumber }>

    messageSender(overrides?: CallOverrides): Promise<[string]>

    'messageSender()'(overrides?: CallOverrides): Promise<[string]>

    mint(overrides?: Overrides): Promise<ContractTransaction>

    'mint()'(overrides?: Overrides): Promise<ContractTransaction>

    name(overrides?: CallOverrides): Promise<[string]>

    'name()'(overrides?: CallOverrides): Promise<[string]>

    nominateNewOwner(
      _owner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'nominateNewOwner(address)'(
      _owner: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    nominatedOwner(overrides?: CallOverrides): Promise<[string]>

    'nominatedOwner()'(overrides?: CallOverrides): Promise<[string]>

    owner(overrides?: CallOverrides): Promise<[string]>

    'owner()'(overrides?: CallOverrides): Promise<[string]>

    proxy(overrides?: CallOverrides): Promise<[string]>

    'proxy()'(overrides?: CallOverrides): Promise<[string]>

    remainingIssuableSynths(
      account: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        maxIssuable: BigNumber
        alreadyIssued: BigNumber
        totalSystemDebt: BigNumber
      }
    >

    'remainingIssuableSynths(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        maxIssuable: BigNumber
        alreadyIssued: BigNumber
        totalSystemDebt: BigNumber
      }
    >

    resolver(overrides?: CallOverrides): Promise<[string]>

    'resolver()'(overrides?: CallOverrides): Promise<[string]>

    resolverAddressesRequired(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>

    'resolverAddressesRequired(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>

    sUSD(overrides?: CallOverrides): Promise<[string]>

    'sUSD()'(overrides?: CallOverrides): Promise<[string]>

    selfDestruct(overrides?: Overrides): Promise<ContractTransaction>

    'selfDestruct()'(overrides?: Overrides): Promise<ContractTransaction>

    selfDestructBeneficiary(overrides?: CallOverrides): Promise<[string]>

    'selfDestructBeneficiary()'(overrides?: CallOverrides): Promise<[string]>

    selfDestructInitiated(overrides?: CallOverrides): Promise<[boolean]>

    'selfDestructInitiated()'(overrides?: CallOverrides): Promise<[boolean]>

    setIntegrationProxy(
      _integrationProxy: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'setIntegrationProxy(address)'(
      _integrationProxy: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    setMessageSender(
      sender: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'setMessageSender(address)'(
      sender: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    setProxy(
      _proxy: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'setProxy(address)'(
      _proxy: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    setResolverAndSyncCache(
      _resolver: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'setResolverAndSyncCache(address)'(
      _resolver: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    setSelfDestructBeneficiary(
      _beneficiary: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'setSelfDestructBeneficiary(address)'(
      _beneficiary: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    setTokenState(
      _tokenState: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'setTokenState(address)'(
      _tokenState: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    settle(
      currencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'settle(bytes32)'(
      currencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    symbol(overrides?: CallOverrides): Promise<[string]>

    'symbol()'(overrides?: CallOverrides): Promise<[string]>

    synths(currencyKey: BytesLike, overrides?: CallOverrides): Promise<[string]>

    'synths(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>

    synthsByAddress(
      synthAddress: string,
      overrides?: CallOverrides
    ): Promise<[string]>

    'synthsByAddress(address)'(
      synthAddress: string,
      overrides?: CallOverrides
    ): Promise<[string]>

    terminateSelfDestruct(overrides?: Overrides): Promise<ContractTransaction>

    'terminateSelfDestruct()'(
      overrides?: Overrides
    ): Promise<ContractTransaction>

    tokenState(overrides?: CallOverrides): Promise<[string]>

    'tokenState()'(overrides?: CallOverrides): Promise<[string]>

    totalIssuedSynths(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'totalIssuedSynths(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    totalIssuedSynthsExcludeEtherCollateral(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    'totalIssuedSynthsExcludeEtherCollateral(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>

    totalSupply(overrides?: CallOverrides): Promise<[BigNumber]>

    'totalSupply()'(overrides?: CallOverrides): Promise<[BigNumber]>

    transfer(
      to: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'transfer(address,uint256)'(
      to: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    transferFrom(
      from: string,
      to: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'transferFrom(address,address,uint256)'(
      from: string,
      to: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    transferableSynthetix(
      account: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { transferable: BigNumber }>

    'transferableSynthetix(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { transferable: BigNumber }>
  }

  DECIMALS(overrides?: CallOverrides): Promise<number>

  'DECIMALS()'(overrides?: CallOverrides): Promise<number>

  MAX_ADDRESSES_FROM_RESOLVER(overrides?: CallOverrides): Promise<BigNumber>

  'MAX_ADDRESSES_FROM_RESOLVER()'(overrides?: CallOverrides): Promise<BigNumber>

  SELFDESTRUCT_DELAY(overrides?: CallOverrides): Promise<BigNumber>

  'SELFDESTRUCT_DELAY()'(overrides?: CallOverrides): Promise<BigNumber>

  TOKEN_NAME(overrides?: CallOverrides): Promise<string>

  'TOKEN_NAME()'(overrides?: CallOverrides): Promise<string>

  TOKEN_SYMBOL(overrides?: CallOverrides): Promise<string>

  'TOKEN_SYMBOL()'(overrides?: CallOverrides): Promise<string>

  acceptOwnership(overrides?: Overrides): Promise<ContractTransaction>

  'acceptOwnership()'(overrides?: Overrides): Promise<ContractTransaction>

  allowance(
    owner: string,
    spender: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'allowance(address,address)'(
    owner: string,
    spender: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  anySynthOrSNXRateIsStale(overrides?: CallOverrides): Promise<boolean>

  'anySynthOrSNXRateIsStale()'(overrides?: CallOverrides): Promise<boolean>

  approve(
    spender: string,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'approve(address,uint256)'(
    spender: string,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  availableCurrencyKeys(overrides?: CallOverrides): Promise<string[]>

  'availableCurrencyKeys()'(overrides?: CallOverrides): Promise<string[]>

  availableSynthCount(overrides?: CallOverrides): Promise<BigNumber>

  'availableSynthCount()'(overrides?: CallOverrides): Promise<BigNumber>

  availableSynths(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>

  'availableSynths(uint256)'(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>

  balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>

  'balanceOf(address)'(
    account: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  burnSynths(
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'burnSynths(uint256)'(
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  burnSynthsOnBehalf(
    burnForAddress: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'burnSynthsOnBehalf(address,uint256)'(
    burnForAddress: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  burnSynthsToTarget(overrides?: Overrides): Promise<ContractTransaction>

  'burnSynthsToTarget()'(overrides?: Overrides): Promise<ContractTransaction>

  burnSynthsToTargetOnBehalf(
    burnForAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'burnSynthsToTargetOnBehalf(address)'(
    burnForAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  collateral(account: string, overrides?: CallOverrides): Promise<BigNumber>

  'collateral(address)'(
    account: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  collateralisationRatio(
    _issuer: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'collateralisationRatio(address)'(
    _issuer: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  debtBalanceOf(
    account: string,
    currencyKey: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'debtBalanceOf(address,bytes32)'(
    account: string,
    currencyKey: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  decimals(overrides?: CallOverrides): Promise<number>

  'decimals()'(overrides?: CallOverrides): Promise<number>

  emitExchangeRebate(
    account: string,
    currencyKey: BytesLike,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'emitExchangeRebate(address,bytes32,uint256)'(
    account: string,
    currencyKey: BytesLike,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  emitExchangeReclaim(
    account: string,
    currencyKey: BytesLike,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'emitExchangeReclaim(address,bytes32,uint256)'(
    account: string,
    currencyKey: BytesLike,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  emitSynthExchange(
    account: string,
    fromCurrencyKey: BytesLike,
    fromAmount: BigNumberish,
    toCurrencyKey: BytesLike,
    toAmount: BigNumberish,
    toAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'emitSynthExchange(address,bytes32,uint256,bytes32,uint256,address)'(
    account: string,
    fromCurrencyKey: BytesLike,
    fromAmount: BigNumberish,
    toCurrencyKey: BytesLike,
    toAmount: BigNumberish,
    toAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  exchange(
    sourceCurrencyKey: BytesLike,
    sourceAmount: BigNumberish,
    destinationCurrencyKey: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'exchange(bytes32,uint256,bytes32)'(
    sourceCurrencyKey: BytesLike,
    sourceAmount: BigNumberish,
    destinationCurrencyKey: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  exchangeOnBehalf(
    exchangeForAddress: string,
    sourceCurrencyKey: BytesLike,
    sourceAmount: BigNumberish,
    destinationCurrencyKey: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'exchangeOnBehalf(address,bytes32,uint256,bytes32)'(
    exchangeForAddress: string,
    sourceCurrencyKey: BytesLike,
    sourceAmount: BigNumberish,
    destinationCurrencyKey: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  getResolverAddressesRequired(
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ]
  >

  'getResolverAddressesRequired()'(
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string,
      string
    ]
  >

  initiateSelfDestruct(overrides?: Overrides): Promise<ContractTransaction>

  'initiateSelfDestruct()'(overrides?: Overrides): Promise<ContractTransaction>

  initiationTime(overrides?: CallOverrides): Promise<BigNumber>

  'initiationTime()'(overrides?: CallOverrides): Promise<BigNumber>

  integrationProxy(overrides?: CallOverrides): Promise<string>

  'integrationProxy()'(overrides?: CallOverrides): Promise<string>

  isResolverCached(
    _resolver: string,
    overrides?: CallOverrides
  ): Promise<boolean>

  'isResolverCached(address)'(
    _resolver: string,
    overrides?: CallOverrides
  ): Promise<boolean>

  isWaitingPeriod(
    currencyKey: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>

  'isWaitingPeriod(bytes32)'(
    currencyKey: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>

  issueMaxSynths(overrides?: Overrides): Promise<ContractTransaction>

  'issueMaxSynths()'(overrides?: Overrides): Promise<ContractTransaction>

  issueMaxSynthsOnBehalf(
    issueForAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'issueMaxSynthsOnBehalf(address)'(
    issueForAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  issueSynths(
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'issueSynths(uint256)'(
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  issueSynthsOnBehalf(
    issueForAddress: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'issueSynthsOnBehalf(address,uint256)'(
    issueForAddress: string,
    amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  liquidateDelinquentAccount(
    account: string,
    susdAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'liquidateDelinquentAccount(address,uint256)'(
    account: string,
    susdAmount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  maxIssuableSynths(
    account: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'maxIssuableSynths(address)'(
    account: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  messageSender(overrides?: CallOverrides): Promise<string>

  'messageSender()'(overrides?: CallOverrides): Promise<string>

  mint(overrides?: Overrides): Promise<ContractTransaction>

  'mint()'(overrides?: Overrides): Promise<ContractTransaction>

  name(overrides?: CallOverrides): Promise<string>

  'name()'(overrides?: CallOverrides): Promise<string>

  nominateNewOwner(
    _owner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'nominateNewOwner(address)'(
    _owner: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  nominatedOwner(overrides?: CallOverrides): Promise<string>

  'nominatedOwner()'(overrides?: CallOverrides): Promise<string>

  owner(overrides?: CallOverrides): Promise<string>

  'owner()'(overrides?: CallOverrides): Promise<string>

  proxy(overrides?: CallOverrides): Promise<string>

  'proxy()'(overrides?: CallOverrides): Promise<string>

  remainingIssuableSynths(
    account: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber] & {
      maxIssuable: BigNumber
      alreadyIssued: BigNumber
      totalSystemDebt: BigNumber
    }
  >

  'remainingIssuableSynths(address)'(
    account: string,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber] & {
      maxIssuable: BigNumber
      alreadyIssued: BigNumber
      totalSystemDebt: BigNumber
    }
  >

  resolver(overrides?: CallOverrides): Promise<string>

  'resolver()'(overrides?: CallOverrides): Promise<string>

  resolverAddressesRequired(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>

  'resolverAddressesRequired(uint256)'(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>

  sUSD(overrides?: CallOverrides): Promise<string>

  'sUSD()'(overrides?: CallOverrides): Promise<string>

  selfDestruct(overrides?: Overrides): Promise<ContractTransaction>

  'selfDestruct()'(overrides?: Overrides): Promise<ContractTransaction>

  selfDestructBeneficiary(overrides?: CallOverrides): Promise<string>

  'selfDestructBeneficiary()'(overrides?: CallOverrides): Promise<string>

  selfDestructInitiated(overrides?: CallOverrides): Promise<boolean>

  'selfDestructInitiated()'(overrides?: CallOverrides): Promise<boolean>

  setIntegrationProxy(
    _integrationProxy: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'setIntegrationProxy(address)'(
    _integrationProxy: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  setMessageSender(
    sender: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'setMessageSender(address)'(
    sender: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  setProxy(_proxy: string, overrides?: Overrides): Promise<ContractTransaction>

  'setProxy(address)'(
    _proxy: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  setResolverAndSyncCache(
    _resolver: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'setResolverAndSyncCache(address)'(
    _resolver: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  setSelfDestructBeneficiary(
    _beneficiary: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'setSelfDestructBeneficiary(address)'(
    _beneficiary: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  setTokenState(
    _tokenState: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'setTokenState(address)'(
    _tokenState: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  settle(
    currencyKey: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'settle(bytes32)'(
    currencyKey: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  symbol(overrides?: CallOverrides): Promise<string>

  'symbol()'(overrides?: CallOverrides): Promise<string>

  synths(currencyKey: BytesLike, overrides?: CallOverrides): Promise<string>

  'synths(bytes32)'(
    currencyKey: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>

  synthsByAddress(
    synthAddress: string,
    overrides?: CallOverrides
  ): Promise<string>

  'synthsByAddress(address)'(
    synthAddress: string,
    overrides?: CallOverrides
  ): Promise<string>

  terminateSelfDestruct(overrides?: Overrides): Promise<ContractTransaction>

  'terminateSelfDestruct()'(overrides?: Overrides): Promise<ContractTransaction>

  tokenState(overrides?: CallOverrides): Promise<string>

  'tokenState()'(overrides?: CallOverrides): Promise<string>

  totalIssuedSynths(
    currencyKey: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'totalIssuedSynths(bytes32)'(
    currencyKey: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  totalIssuedSynthsExcludeEtherCollateral(
    currencyKey: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'totalIssuedSynthsExcludeEtherCollateral(bytes32)'(
    currencyKey: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  totalSupply(overrides?: CallOverrides): Promise<BigNumber>

  'totalSupply()'(overrides?: CallOverrides): Promise<BigNumber>

  transfer(
    to: string,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'transfer(address,uint256)'(
    to: string,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  transferFrom(
    from: string,
    to: string,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'transferFrom(address,address,uint256)'(
    from: string,
    to: string,
    value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  transferableSynthetix(
    account: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  'transferableSynthetix(address)'(
    account: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>

  callStatic: {
    DECIMALS(overrides?: CallOverrides): Promise<number>

    'DECIMALS()'(overrides?: CallOverrides): Promise<number>

    MAX_ADDRESSES_FROM_RESOLVER(overrides?: CallOverrides): Promise<BigNumber>

    'MAX_ADDRESSES_FROM_RESOLVER()'(
      overrides?: CallOverrides
    ): Promise<BigNumber>

    SELFDESTRUCT_DELAY(overrides?: CallOverrides): Promise<BigNumber>

    'SELFDESTRUCT_DELAY()'(overrides?: CallOverrides): Promise<BigNumber>

    TOKEN_NAME(overrides?: CallOverrides): Promise<string>

    'TOKEN_NAME()'(overrides?: CallOverrides): Promise<string>

    TOKEN_SYMBOL(overrides?: CallOverrides): Promise<string>

    'TOKEN_SYMBOL()'(overrides?: CallOverrides): Promise<string>

    acceptOwnership(overrides?: CallOverrides): Promise<void>

    'acceptOwnership()'(overrides?: CallOverrides): Promise<void>

    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'allowance(address,address)'(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    anySynthOrSNXRateIsStale(overrides?: CallOverrides): Promise<boolean>

    'anySynthOrSNXRateIsStale()'(overrides?: CallOverrides): Promise<boolean>

    approve(
      spender: string,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    'approve(address,uint256)'(
      spender: string,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    availableCurrencyKeys(overrides?: CallOverrides): Promise<string[]>

    'availableCurrencyKeys()'(overrides?: CallOverrides): Promise<string[]>

    availableSynthCount(overrides?: CallOverrides): Promise<BigNumber>

    'availableSynthCount()'(overrides?: CallOverrides): Promise<BigNumber>

    availableSynths(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>

    'availableSynths(uint256)'(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>

    balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>

    'balanceOf(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    burnSynths(amount: BigNumberish, overrides?: CallOverrides): Promise<void>

    'burnSynths(uint256)'(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    burnSynthsOnBehalf(
      burnForAddress: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    'burnSynthsOnBehalf(address,uint256)'(
      burnForAddress: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    burnSynthsToTarget(overrides?: CallOverrides): Promise<void>

    'burnSynthsToTarget()'(overrides?: CallOverrides): Promise<void>

    burnSynthsToTargetOnBehalf(
      burnForAddress: string,
      overrides?: CallOverrides
    ): Promise<void>

    'burnSynthsToTargetOnBehalf(address)'(
      burnForAddress: string,
      overrides?: CallOverrides
    ): Promise<void>

    collateral(account: string, overrides?: CallOverrides): Promise<BigNumber>

    'collateral(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    collateralisationRatio(
      _issuer: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'collateralisationRatio(address)'(
      _issuer: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    debtBalanceOf(
      account: string,
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'debtBalanceOf(address,bytes32)'(
      account: string,
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    decimals(overrides?: CallOverrides): Promise<number>

    'decimals()'(overrides?: CallOverrides): Promise<number>

    emitExchangeRebate(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    'emitExchangeRebate(address,bytes32,uint256)'(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    emitExchangeReclaim(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    'emitExchangeReclaim(address,bytes32,uint256)'(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    emitSynthExchange(
      account: string,
      fromCurrencyKey: BytesLike,
      fromAmount: BigNumberish,
      toCurrencyKey: BytesLike,
      toAmount: BigNumberish,
      toAddress: string,
      overrides?: CallOverrides
    ): Promise<void>

    'emitSynthExchange(address,bytes32,uint256,bytes32,uint256,address)'(
      account: string,
      fromCurrencyKey: BytesLike,
      fromAmount: BigNumberish,
      toCurrencyKey: BytesLike,
      toAmount: BigNumberish,
      toAddress: string,
      overrides?: CallOverrides
    ): Promise<void>

    exchange(
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'exchange(bytes32,uint256,bytes32)'(
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    exchangeOnBehalf(
      exchangeForAddress: string,
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'exchangeOnBehalf(address,bytes32,uint256,bytes32)'(
      exchangeForAddress: string,
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    getResolverAddressesRequired(
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ]
    >

    'getResolverAddressesRequired()'(
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string,
        string
      ]
    >

    initiateSelfDestruct(overrides?: CallOverrides): Promise<void>

    'initiateSelfDestruct()'(overrides?: CallOverrides): Promise<void>

    initiationTime(overrides?: CallOverrides): Promise<BigNumber>

    'initiationTime()'(overrides?: CallOverrides): Promise<BigNumber>

    integrationProxy(overrides?: CallOverrides): Promise<string>

    'integrationProxy()'(overrides?: CallOverrides): Promise<string>

    isResolverCached(
      _resolver: string,
      overrides?: CallOverrides
    ): Promise<boolean>

    'isResolverCached(address)'(
      _resolver: string,
      overrides?: CallOverrides
    ): Promise<boolean>

    isWaitingPeriod(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>

    'isWaitingPeriod(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>

    issueMaxSynths(overrides?: CallOverrides): Promise<void>

    'issueMaxSynths()'(overrides?: CallOverrides): Promise<void>

    issueMaxSynthsOnBehalf(
      issueForAddress: string,
      overrides?: CallOverrides
    ): Promise<void>

    'issueMaxSynthsOnBehalf(address)'(
      issueForAddress: string,
      overrides?: CallOverrides
    ): Promise<void>

    issueSynths(amount: BigNumberish, overrides?: CallOverrides): Promise<void>

    'issueSynths(uint256)'(
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    issueSynthsOnBehalf(
      issueForAddress: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    'issueSynthsOnBehalf(address,uint256)'(
      issueForAddress: string,
      amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>

    liquidateDelinquentAccount(
      account: string,
      susdAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    'liquidateDelinquentAccount(address,uint256)'(
      account: string,
      susdAmount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    maxIssuableSynths(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'maxIssuableSynths(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    messageSender(overrides?: CallOverrides): Promise<string>

    'messageSender()'(overrides?: CallOverrides): Promise<string>

    mint(overrides?: CallOverrides): Promise<boolean>

    'mint()'(overrides?: CallOverrides): Promise<boolean>

    name(overrides?: CallOverrides): Promise<string>

    'name()'(overrides?: CallOverrides): Promise<string>

    nominateNewOwner(_owner: string, overrides?: CallOverrides): Promise<void>

    'nominateNewOwner(address)'(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<void>

    nominatedOwner(overrides?: CallOverrides): Promise<string>

    'nominatedOwner()'(overrides?: CallOverrides): Promise<string>

    owner(overrides?: CallOverrides): Promise<string>

    'owner()'(overrides?: CallOverrides): Promise<string>

    proxy(overrides?: CallOverrides): Promise<string>

    'proxy()'(overrides?: CallOverrides): Promise<string>

    remainingIssuableSynths(
      account: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        maxIssuable: BigNumber
        alreadyIssued: BigNumber
        totalSystemDebt: BigNumber
      }
    >

    'remainingIssuableSynths(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        maxIssuable: BigNumber
        alreadyIssued: BigNumber
        totalSystemDebt: BigNumber
      }
    >

    resolver(overrides?: CallOverrides): Promise<string>

    'resolver()'(overrides?: CallOverrides): Promise<string>

    resolverAddressesRequired(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>

    'resolverAddressesRequired(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>

    sUSD(overrides?: CallOverrides): Promise<string>

    'sUSD()'(overrides?: CallOverrides): Promise<string>

    selfDestruct(overrides?: CallOverrides): Promise<void>

    'selfDestruct()'(overrides?: CallOverrides): Promise<void>

    selfDestructBeneficiary(overrides?: CallOverrides): Promise<string>

    'selfDestructBeneficiary()'(overrides?: CallOverrides): Promise<string>

    selfDestructInitiated(overrides?: CallOverrides): Promise<boolean>

    'selfDestructInitiated()'(overrides?: CallOverrides): Promise<boolean>

    setIntegrationProxy(
      _integrationProxy: string,
      overrides?: CallOverrides
    ): Promise<void>

    'setIntegrationProxy(address)'(
      _integrationProxy: string,
      overrides?: CallOverrides
    ): Promise<void>

    setMessageSender(sender: string, overrides?: CallOverrides): Promise<void>

    'setMessageSender(address)'(
      sender: string,
      overrides?: CallOverrides
    ): Promise<void>

    setProxy(_proxy: string, overrides?: CallOverrides): Promise<void>

    'setProxy(address)'(
      _proxy: string,
      overrides?: CallOverrides
    ): Promise<void>

    setResolverAndSyncCache(
      _resolver: string,
      overrides?: CallOverrides
    ): Promise<void>

    'setResolverAndSyncCache(address)'(
      _resolver: string,
      overrides?: CallOverrides
    ): Promise<void>

    setSelfDestructBeneficiary(
      _beneficiary: string,
      overrides?: CallOverrides
    ): Promise<void>

    'setSelfDestructBeneficiary(address)'(
      _beneficiary: string,
      overrides?: CallOverrides
    ): Promise<void>

    setTokenState(_tokenState: string, overrides?: CallOverrides): Promise<void>

    'setTokenState(address)'(
      _tokenState: string,
      overrides?: CallOverrides
    ): Promise<void>

    settle(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        reclaimed: BigNumber
        refunded: BigNumber
        numEntriesSettled: BigNumber
      }
    >

    'settle(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        reclaimed: BigNumber
        refunded: BigNumber
        numEntriesSettled: BigNumber
      }
    >

    symbol(overrides?: CallOverrides): Promise<string>

    'symbol()'(overrides?: CallOverrides): Promise<string>

    synths(currencyKey: BytesLike, overrides?: CallOverrides): Promise<string>

    'synths(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>

    synthsByAddress(
      synthAddress: string,
      overrides?: CallOverrides
    ): Promise<string>

    'synthsByAddress(address)'(
      synthAddress: string,
      overrides?: CallOverrides
    ): Promise<string>

    terminateSelfDestruct(overrides?: CallOverrides): Promise<void>

    'terminateSelfDestruct()'(overrides?: CallOverrides): Promise<void>

    tokenState(overrides?: CallOverrides): Promise<string>

    'tokenState()'(overrides?: CallOverrides): Promise<string>

    totalIssuedSynths(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'totalIssuedSynths(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    totalIssuedSynthsExcludeEtherCollateral(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'totalIssuedSynthsExcludeEtherCollateral(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>

    'totalSupply()'(overrides?: CallOverrides): Promise<BigNumber>

    transfer(
      to: string,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    'transfer(address,uint256)'(
      to: string,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    transferFrom(
      from: string,
      to: string,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    'transferFrom(address,address,uint256)'(
      from: string,
      to: string,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>

    transferableSynthetix(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'transferableSynthetix(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>
  }

  filters: {
    AccountLiquidated(
      account: string | null,
      snxRedeemed: null,
      amountLiquidated: null,
      liquidator: null
    ): EventFilter

    Approval(
      owner: string | null,
      spender: string | null,
      value: null
    ): EventFilter

    ExchangeRebate(
      account: string | null,
      currencyKey: null,
      amount: null
    ): EventFilter

    ExchangeReclaim(
      account: string | null,
      currencyKey: null,
      amount: null
    ): EventFilter

    OwnerChanged(oldOwner: null, newOwner: null): EventFilter

    OwnerNominated(newOwner: null): EventFilter

    ProxyUpdated(proxyAddress: null): EventFilter

    SelfDestructBeneficiaryUpdated(newBeneficiary: null): EventFilter

    SelfDestructInitiated(selfDestructDelay: null): EventFilter

    SelfDestructTerminated(): EventFilter

    SelfDestructed(beneficiary: null): EventFilter

    SynthExchange(
      account: string | null,
      fromCurrencyKey: null,
      fromAmount: null,
      toCurrencyKey: null,
      toAmount: null,
      toAddress: null
    ): EventFilter

    TokenStateUpdated(newTokenState: null): EventFilter

    Transfer(from: string | null, to: string | null, value: null): EventFilter
  }

  estimateGas: {
    DECIMALS(overrides?: CallOverrides): Promise<BigNumber>

    'DECIMALS()'(overrides?: CallOverrides): Promise<BigNumber>

    MAX_ADDRESSES_FROM_RESOLVER(overrides?: CallOverrides): Promise<BigNumber>

    'MAX_ADDRESSES_FROM_RESOLVER()'(
      overrides?: CallOverrides
    ): Promise<BigNumber>

    SELFDESTRUCT_DELAY(overrides?: CallOverrides): Promise<BigNumber>

    'SELFDESTRUCT_DELAY()'(overrides?: CallOverrides): Promise<BigNumber>

    TOKEN_NAME(overrides?: CallOverrides): Promise<BigNumber>

    'TOKEN_NAME()'(overrides?: CallOverrides): Promise<BigNumber>

    TOKEN_SYMBOL(overrides?: CallOverrides): Promise<BigNumber>

    'TOKEN_SYMBOL()'(overrides?: CallOverrides): Promise<BigNumber>

    acceptOwnership(overrides?: Overrides): Promise<BigNumber>

    'acceptOwnership()'(overrides?: Overrides): Promise<BigNumber>

    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'allowance(address,address)'(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    anySynthOrSNXRateIsStale(overrides?: CallOverrides): Promise<BigNumber>

    'anySynthOrSNXRateIsStale()'(overrides?: CallOverrides): Promise<BigNumber>

    approve(
      spender: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'approve(address,uint256)'(
      spender: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    availableCurrencyKeys(overrides?: CallOverrides): Promise<BigNumber>

    'availableCurrencyKeys()'(overrides?: CallOverrides): Promise<BigNumber>

    availableSynthCount(overrides?: CallOverrides): Promise<BigNumber>

    'availableSynthCount()'(overrides?: CallOverrides): Promise<BigNumber>

    availableSynths(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'availableSynths(uint256)'(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    balanceOf(account: string, overrides?: CallOverrides): Promise<BigNumber>

    'balanceOf(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    burnSynths(amount: BigNumberish, overrides?: Overrides): Promise<BigNumber>

    'burnSynths(uint256)'(
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    burnSynthsOnBehalf(
      burnForAddress: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'burnSynthsOnBehalf(address,uint256)'(
      burnForAddress: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    burnSynthsToTarget(overrides?: Overrides): Promise<BigNumber>

    'burnSynthsToTarget()'(overrides?: Overrides): Promise<BigNumber>

    burnSynthsToTargetOnBehalf(
      burnForAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    'burnSynthsToTargetOnBehalf(address)'(
      burnForAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    collateral(account: string, overrides?: CallOverrides): Promise<BigNumber>

    'collateral(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    collateralisationRatio(
      _issuer: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'collateralisationRatio(address)'(
      _issuer: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    debtBalanceOf(
      account: string,
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'debtBalanceOf(address,bytes32)'(
      account: string,
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    decimals(overrides?: CallOverrides): Promise<BigNumber>

    'decimals()'(overrides?: CallOverrides): Promise<BigNumber>

    emitExchangeRebate(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'emitExchangeRebate(address,bytes32,uint256)'(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    emitExchangeReclaim(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'emitExchangeReclaim(address,bytes32,uint256)'(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    emitSynthExchange(
      account: string,
      fromCurrencyKey: BytesLike,
      fromAmount: BigNumberish,
      toCurrencyKey: BytesLike,
      toAmount: BigNumberish,
      toAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    'emitSynthExchange(address,bytes32,uint256,bytes32,uint256,address)'(
      account: string,
      fromCurrencyKey: BytesLike,
      fromAmount: BigNumberish,
      toCurrencyKey: BytesLike,
      toAmount: BigNumberish,
      toAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    exchange(
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>

    'exchange(bytes32,uint256,bytes32)'(
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>

    exchangeOnBehalf(
      exchangeForAddress: string,
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>

    'exchangeOnBehalf(address,bytes32,uint256,bytes32)'(
      exchangeForAddress: string,
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>

    getResolverAddressesRequired(overrides?: CallOverrides): Promise<BigNumber>

    'getResolverAddressesRequired()'(
      overrides?: CallOverrides
    ): Promise<BigNumber>

    initiateSelfDestruct(overrides?: Overrides): Promise<BigNumber>

    'initiateSelfDestruct()'(overrides?: Overrides): Promise<BigNumber>

    initiationTime(overrides?: CallOverrides): Promise<BigNumber>

    'initiationTime()'(overrides?: CallOverrides): Promise<BigNumber>

    integrationProxy(overrides?: CallOverrides): Promise<BigNumber>

    'integrationProxy()'(overrides?: CallOverrides): Promise<BigNumber>

    isResolverCached(
      _resolver: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'isResolverCached(address)'(
      _resolver: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    isWaitingPeriod(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'isWaitingPeriod(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    issueMaxSynths(overrides?: Overrides): Promise<BigNumber>

    'issueMaxSynths()'(overrides?: Overrides): Promise<BigNumber>

    issueMaxSynthsOnBehalf(
      issueForAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    'issueMaxSynthsOnBehalf(address)'(
      issueForAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    issueSynths(amount: BigNumberish, overrides?: Overrides): Promise<BigNumber>

    'issueSynths(uint256)'(
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    issueSynthsOnBehalf(
      issueForAddress: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'issueSynthsOnBehalf(address,uint256)'(
      issueForAddress: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    liquidateDelinquentAccount(
      account: string,
      susdAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'liquidateDelinquentAccount(address,uint256)'(
      account: string,
      susdAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    maxIssuableSynths(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'maxIssuableSynths(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    messageSender(overrides?: CallOverrides): Promise<BigNumber>

    'messageSender()'(overrides?: CallOverrides): Promise<BigNumber>

    mint(overrides?: Overrides): Promise<BigNumber>

    'mint()'(overrides?: Overrides): Promise<BigNumber>

    name(overrides?: CallOverrides): Promise<BigNumber>

    'name()'(overrides?: CallOverrides): Promise<BigNumber>

    nominateNewOwner(_owner: string, overrides?: Overrides): Promise<BigNumber>

    'nominateNewOwner(address)'(
      _owner: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    nominatedOwner(overrides?: CallOverrides): Promise<BigNumber>

    'nominatedOwner()'(overrides?: CallOverrides): Promise<BigNumber>

    owner(overrides?: CallOverrides): Promise<BigNumber>

    'owner()'(overrides?: CallOverrides): Promise<BigNumber>

    proxy(overrides?: CallOverrides): Promise<BigNumber>

    'proxy()'(overrides?: CallOverrides): Promise<BigNumber>

    remainingIssuableSynths(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'remainingIssuableSynths(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    resolver(overrides?: CallOverrides): Promise<BigNumber>

    'resolver()'(overrides?: CallOverrides): Promise<BigNumber>

    resolverAddressesRequired(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'resolverAddressesRequired(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    sUSD(overrides?: CallOverrides): Promise<BigNumber>

    'sUSD()'(overrides?: CallOverrides): Promise<BigNumber>

    selfDestruct(overrides?: Overrides): Promise<BigNumber>

    'selfDestruct()'(overrides?: Overrides): Promise<BigNumber>

    selfDestructBeneficiary(overrides?: CallOverrides): Promise<BigNumber>

    'selfDestructBeneficiary()'(overrides?: CallOverrides): Promise<BigNumber>

    selfDestructInitiated(overrides?: CallOverrides): Promise<BigNumber>

    'selfDestructInitiated()'(overrides?: CallOverrides): Promise<BigNumber>

    setIntegrationProxy(
      _integrationProxy: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    'setIntegrationProxy(address)'(
      _integrationProxy: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    setMessageSender(sender: string, overrides?: Overrides): Promise<BigNumber>

    'setMessageSender(address)'(
      sender: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    setProxy(_proxy: string, overrides?: Overrides): Promise<BigNumber>

    'setProxy(address)'(
      _proxy: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    setResolverAndSyncCache(
      _resolver: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    'setResolverAndSyncCache(address)'(
      _resolver: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    setSelfDestructBeneficiary(
      _beneficiary: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    'setSelfDestructBeneficiary(address)'(
      _beneficiary: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    setTokenState(
      _tokenState: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    'setTokenState(address)'(
      _tokenState: string,
      overrides?: Overrides
    ): Promise<BigNumber>

    settle(currencyKey: BytesLike, overrides?: Overrides): Promise<BigNumber>

    'settle(bytes32)'(
      currencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>

    symbol(overrides?: CallOverrides): Promise<BigNumber>

    'symbol()'(overrides?: CallOverrides): Promise<BigNumber>

    synths(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'synths(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    synthsByAddress(
      synthAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'synthsByAddress(address)'(
      synthAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    terminateSelfDestruct(overrides?: Overrides): Promise<BigNumber>

    'terminateSelfDestruct()'(overrides?: Overrides): Promise<BigNumber>

    tokenState(overrides?: CallOverrides): Promise<BigNumber>

    'tokenState()'(overrides?: CallOverrides): Promise<BigNumber>

    totalIssuedSynths(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'totalIssuedSynths(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    totalIssuedSynthsExcludeEtherCollateral(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'totalIssuedSynthsExcludeEtherCollateral(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>

    'totalSupply()'(overrides?: CallOverrides): Promise<BigNumber>

    transfer(
      to: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'transfer(address,uint256)'(
      to: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    transferFrom(
      from: string,
      to: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    'transferFrom(address,address,uint256)'(
      from: string,
      to: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>

    transferableSynthetix(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>

    'transferableSynthetix(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>
  }

  populateTransaction: {
    DECIMALS(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'DECIMALS()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    MAX_ADDRESSES_FROM_RESOLVER(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'MAX_ADDRESSES_FROM_RESOLVER()'(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    SELFDESTRUCT_DELAY(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'SELFDESTRUCT_DELAY()'(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    TOKEN_NAME(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'TOKEN_NAME()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    TOKEN_SYMBOL(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'TOKEN_SYMBOL()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    acceptOwnership(overrides?: Overrides): Promise<PopulatedTransaction>

    'acceptOwnership()'(overrides?: Overrides): Promise<PopulatedTransaction>

    allowance(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'allowance(address,address)'(
      owner: string,
      spender: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    anySynthOrSNXRateIsStale(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'anySynthOrSNXRateIsStale()'(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    approve(
      spender: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'approve(address,uint256)'(
      spender: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    availableCurrencyKeys(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'availableCurrencyKeys()'(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    availableSynthCount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'availableSynthCount()'(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    availableSynths(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'availableSynths(uint256)'(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    balanceOf(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'balanceOf(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    burnSynths(
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'burnSynths(uint256)'(
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    burnSynthsOnBehalf(
      burnForAddress: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'burnSynthsOnBehalf(address,uint256)'(
      burnForAddress: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    burnSynthsToTarget(overrides?: Overrides): Promise<PopulatedTransaction>

    'burnSynthsToTarget()'(overrides?: Overrides): Promise<PopulatedTransaction>

    burnSynthsToTargetOnBehalf(
      burnForAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'burnSynthsToTargetOnBehalf(address)'(
      burnForAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    collateral(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'collateral(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    collateralisationRatio(
      _issuer: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'collateralisationRatio(address)'(
      _issuer: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    debtBalanceOf(
      account: string,
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'debtBalanceOf(address,bytes32)'(
      account: string,
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    decimals(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'decimals()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    emitExchangeRebate(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'emitExchangeRebate(address,bytes32,uint256)'(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    emitExchangeReclaim(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'emitExchangeReclaim(address,bytes32,uint256)'(
      account: string,
      currencyKey: BytesLike,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    emitSynthExchange(
      account: string,
      fromCurrencyKey: BytesLike,
      fromAmount: BigNumberish,
      toCurrencyKey: BytesLike,
      toAmount: BigNumberish,
      toAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'emitSynthExchange(address,bytes32,uint256,bytes32,uint256,address)'(
      account: string,
      fromCurrencyKey: BytesLike,
      fromAmount: BigNumberish,
      toCurrencyKey: BytesLike,
      toAmount: BigNumberish,
      toAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    exchange(
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'exchange(bytes32,uint256,bytes32)'(
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    exchangeOnBehalf(
      exchangeForAddress: string,
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'exchangeOnBehalf(address,bytes32,uint256,bytes32)'(
      exchangeForAddress: string,
      sourceCurrencyKey: BytesLike,
      sourceAmount: BigNumberish,
      destinationCurrencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    getResolverAddressesRequired(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'getResolverAddressesRequired()'(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    initiateSelfDestruct(overrides?: Overrides): Promise<PopulatedTransaction>

    'initiateSelfDestruct()'(
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    initiationTime(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'initiationTime()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    integrationProxy(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'integrationProxy()'(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    isResolverCached(
      _resolver: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'isResolverCached(address)'(
      _resolver: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    isWaitingPeriod(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'isWaitingPeriod(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    issueMaxSynths(overrides?: Overrides): Promise<PopulatedTransaction>

    'issueMaxSynths()'(overrides?: Overrides): Promise<PopulatedTransaction>

    issueMaxSynthsOnBehalf(
      issueForAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'issueMaxSynthsOnBehalf(address)'(
      issueForAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    issueSynths(
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'issueSynths(uint256)'(
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    issueSynthsOnBehalf(
      issueForAddress: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'issueSynthsOnBehalf(address,uint256)'(
      issueForAddress: string,
      amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    liquidateDelinquentAccount(
      account: string,
      susdAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'liquidateDelinquentAccount(address,uint256)'(
      account: string,
      susdAmount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    maxIssuableSynths(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'maxIssuableSynths(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    messageSender(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'messageSender()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    mint(overrides?: Overrides): Promise<PopulatedTransaction>

    'mint()'(overrides?: Overrides): Promise<PopulatedTransaction>

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'name()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    nominateNewOwner(
      _owner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'nominateNewOwner(address)'(
      _owner: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    nominatedOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'nominatedOwner()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'owner()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    proxy(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'proxy()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    remainingIssuableSynths(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'remainingIssuableSynths(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    resolver(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'resolver()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    resolverAddressesRequired(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'resolverAddressesRequired(uint256)'(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    sUSD(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'sUSD()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    selfDestruct(overrides?: Overrides): Promise<PopulatedTransaction>

    'selfDestruct()'(overrides?: Overrides): Promise<PopulatedTransaction>

    selfDestructBeneficiary(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'selfDestructBeneficiary()'(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    selfDestructInitiated(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'selfDestructInitiated()'(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    setIntegrationProxy(
      _integrationProxy: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'setIntegrationProxy(address)'(
      _integrationProxy: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    setMessageSender(
      sender: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'setMessageSender(address)'(
      sender: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    setProxy(
      _proxy: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'setProxy(address)'(
      _proxy: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    setResolverAndSyncCache(
      _resolver: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'setResolverAndSyncCache(address)'(
      _resolver: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    setSelfDestructBeneficiary(
      _beneficiary: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'setSelfDestructBeneficiary(address)'(
      _beneficiary: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    setTokenState(
      _tokenState: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'setTokenState(address)'(
      _tokenState: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    settle(
      currencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'settle(bytes32)'(
      currencyKey: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'symbol()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    synths(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'synths(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    synthsByAddress(
      synthAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'synthsByAddress(address)'(
      synthAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    terminateSelfDestruct(overrides?: Overrides): Promise<PopulatedTransaction>

    'terminateSelfDestruct()'(
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    tokenState(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'tokenState()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    totalIssuedSynths(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'totalIssuedSynths(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    totalIssuedSynthsExcludeEtherCollateral(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'totalIssuedSynthsExcludeEtherCollateral(bytes32)'(
      currencyKey: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>

    'totalSupply()'(overrides?: CallOverrides): Promise<PopulatedTransaction>

    transfer(
      to: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'transfer(address,uint256)'(
      to: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    transferFrom(
      from: string,
      to: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'transferFrom(address,address,uint256)'(
      from: string,
      to: string,
      value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    transferableSynthetix(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>

    'transferableSynthetix(address)'(
      account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>
  }
}
